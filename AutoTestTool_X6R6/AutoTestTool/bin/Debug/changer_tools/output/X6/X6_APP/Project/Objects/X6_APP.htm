<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\X6_APP.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\X6_APP.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Wed Nov 07 17:20:35 2018
<BR><P>
<H3>Maximum Stack Usage =        880 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
CK24_UMTask &rArr; RecvBtData &rArr; BluePktProc &rArr; BlueReqBreak &rArr; SetBluePair &rArr; BlueSendCmd &rArr; BlueCheckRes &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[20]">DMA_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">DMA_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[7]">AES_IRQHandler</a> from ht6xxx_it.o(i.AES_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[34]">BuleCheckReset</a> from ckb24_um.o(i.BuleCheckReset) referenced from ckb24_um.o(.constdata)
 <LI><a href="#[39]">BuleModeDevt</a> from ckb24_um.o(i.BuleModeDevt) referenced from ckb24_um.o(.constdata)
 <LI><a href="#[35]">BuleModeEcho</a> from ckb24_um.o(i.BuleModeEcho) referenced from ckb24_um.o(.constdata)
 <LI><a href="#[3c]">BuleModeGWMac</a> from ckb24_um.o(i.BuleModeGWMac) referenced from ckb24_um.o(.constdata)
 <LI><a href="#[38]">BuleModeGetName</a> from ckb24_um.o(i.BuleModeGetName) referenced from ckb24_um.o(.constdata)
 <LI><a href="#[3d]">BuleModePair</a> from ckb24_um.o(i.BuleModePair) referenced from ckb24_um.o(.constdata)
 <LI><a href="#[36]">BuleModeVers</a> from ckb24_um.o(i.BuleModeVers) referenced from ckb24_um.o(.constdata)
 <LI><a href="#[3a]">BuleSetDevt</a> from ckb24_um.o(i.BuleSetDevt) referenced from ckb24_um.o(.constdata)
 <LI><a href="#[3b]">BuleSetGWMac</a> from ckb24_um.o(i.BuleSetGWMac) referenced from ckb24_um.o(.constdata)
 <LI><a href="#[37]">BuleSetName</a> from ckb24_um.o(i.BuleSetName) referenced from ckb24_um.o(.constdata)
 <LI><a href="#[30]">CK24_UMTask</a> from ckb24_um_handle.o(i.CK24_UMTask) referenced from main_handle.o(i.vMainTask)
 <LI><a href="#[31]">CardAuthTask</a> from cardauth_handle.o(i.CardAuthTask) referenced from main_handle.o(i.vMainTask)
 <LI><a href="#[32]">ComTask</a> from com_handle.o(i.ComTask) referenced from main_handle.o(i.vMainTask)
 <LI><a href="#[20]">DMA_IRQHandler</a> from startup_ht502x.o(.text) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[1f]">EMU_IRQHandler</a> from startup_ht502x.o(.text) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[8]">EXTI0_IRQHandler</a> from ht6xxx_it.o(i.EXTI0_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[9]">EXTI1_IRQHandler</a> from ht6xxx_it.o(i.EXTI1_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[a]">EXTI2_IRQHandler</a> from ht6xxx_it.o(i.EXTI2_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[b]">EXTI3_IRQHandler</a> from ht6xxx_it.o(i.EXTI3_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[c]">EXTI4_IRQHandler</a> from ht6xxx_it.o(i.EXTI4_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[d]">EXTI5_IRQHandler</a> from ht6xxx_it.o(i.EXTI5_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[e]">EXTI6_IRQHandler</a> from ht6xxx_it.o(i.EXTI6_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[22]">EXTI7_IRQHandler</a> from startup_ht502x.o(.text) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[23]">EXTI8_IRQHandler</a> from startup_ht502x.o(.text) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[24]">EXTI9_IRQHandler</a> from startup_ht502x.o(.text) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from ht6xxx_it.o(i.HardFault_Handler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[1b]">I2C_IRQHandler</a> from ht6xxx_it.o(i.I2C_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[21]">KEY_IRQHandler</a> from startup_ht502x.o(.text) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_ht502x.o(.text) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[6]">PMU_IRQHandler</a> from ht6xxx_it.o(i.PMU_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[1a]">RTC_IRQHandler</a> from ht6xxx_it.o(i.RTC_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[1d]">Reserved_IRQHandler</a> from startup_ht502x.o(.text) referenced 2 times from startup_ht502x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_ht502x.o(.text) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[1c]">SPI0_IRQHandler</a> from ht6xxx_it.o(i.SPI0_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from port.o(i.SVC_Handler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[1e]">SelfTestF_IRQHandler</a> from startup_ht502x.o(.text) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from port.o(i.SysTick_Handler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[26]">SystemInit</a> from system_ht6xxx.o(i.SystemInit) referenced from startup_ht502x.o(.text)
 <LI><a href="#[19]">TBS_IRQHandler</a> from ht6xxx_it.o(i.TBS_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[15]">TIMER_0_IRQHandler</a> from ht6xxx_it.o(i.TIMER_0_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[16]">TIMER_1_IRQHandler</a> from simuart.o(i.TIMER_1_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[17]">TIMER_2_IRQHandler</a> from ht6xxx_it.o(i.TIMER_2_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[18]">TIMER_3_IRQHandler</a> from ht6xxx_it.o(i.TIMER_3_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[f]">UART0_IRQHandler</a> from ht6xxx_it.o(i.UART0_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[10]">UART1_IRQHandler</a> from ht6xxx_it.o(i.UART1_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[11]">UART2_IRQHandler</a> from ht6xxx_it.o(i.UART2_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[12]">UART3_IRQHandler</a> from ht6xxx_it.o(i.UART3_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[13]">UART4_IRQHandler</a> from ht6xxx_it.o(i.UART4_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[14]">UART5_IRQHandler</a> from ht6xxx_it.o(i.UART5_IRQHandler) referenced from startup_ht502x.o(RESET)
 <LI><a href="#[27]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_ht502x.o(.text)
 <LI><a href="#[29]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[2a]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[28]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[2d]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[2c]">fputc</a> from main_handle.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[2b]">isspace</a> from isspace_c.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[25]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[33]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[2f]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
 <LI><a href="#[2e]">vMainTask</a> from main_handle.o(i.vMainTask) referenced from main.o(i.main)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(.text)
</UL>
<P><STRONG><a name="[1e4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[3e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[61]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1e5]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[1e6]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[1e7]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[1e8]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[1e9]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1ea]"></a>__asm___14_ht6xxx_flash_c_a0164778____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht6xxx_flash.o(.emb_text), UNUSED)

<P><STRONG><a name="[1eb]"></a>__asm___14_ht6xxx_flash_c_a0164778____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht6xxx_flash.o(.emb_text), UNUSED)

<P><STRONG><a name="[136]"></a>HT_Flash_ByteWrite</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, ht6xxx_flash.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
</UL>

<P><STRONG><a name="[1ec]"></a>HT_Flash_HalfWordWrite</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, ht6xxx_flash.o(.emb_text), UNUSED)

<P><STRONG><a name="[1ed]"></a>HT_Flash_WordWrite</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, ht6xxx_flash.o(.emb_text), UNUSED)

<P><STRONG><a name="[12f]"></a>HT_Flash_PageErase</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, ht6xxx_flash.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ErasePage
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_EraseALL
</UL>

<P><STRONG><a name="[1ee]"></a>HT_Info_ByteWrite</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, ht6xxx_flash.o(.emb_text), UNUSED)

<P><STRONG><a name="[1ef]"></a>HT_Info_HalfWordWrite</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, ht6xxx_flash.o(.emb_text), UNUSED)

<P><STRONG><a name="[1f0]"></a>HT_Info_WordWrite</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, ht6xxx_flash.o(.emb_text), UNUSED)

<P><STRONG><a name="[1f1]"></a>HT_Info_PageErase</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, ht6xxx_flash.o(.emb_text), UNUSED)

<P><STRONG><a name="[1dc]"></a>__asm___6_port_c_39a90d8d__prvPortStartFirstTask</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[18b]"></a>ulSetInterruptMaskFromISR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
</UL>

<P><STRONG><a name="[18d]"></a>vClearInterruptMaskFromISR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_ht502x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ht502x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht502x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EMU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht502x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht502x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht502x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht502x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>KEY_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht502x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SelfTestF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht502x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[1f2]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargingNotice
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingProc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunChargingProc
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeechCardBalance
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTRF2_4gStartCharging
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingAckProc_24G
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardAuthReq_24G
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeNotiProc_BTRF2_4G
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardBalanceSpeech
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime
</UL>

<P><STRONG><a name="[1f3]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingProc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOrderReport
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingTime
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempNotice
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeechChargeing
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OptFailNotice
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTRF2_4gStartCharging
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeechSelectGun
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>

<P><STRONG><a name="[43]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcuElec
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[46]"></a>mktime</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, mktime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = mktime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackSendOuterBT24GData
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendTestPktAck
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReportNotice_BTRF2_4G
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashInfoData
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOrderReport
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShakeReqProc
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddr
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStopCharging
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStartCharging
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendStartChargingAck
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReqBreak
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWUpgradeNotice
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWDownLoad
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCostTemplateUpload
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTRF2_4gStartCharging
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingProc_BTRF2_4G
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargingNoticeBTRF_24G
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardAuthReq_24G
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6X6BindACK_BTRF2_4G
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostTemplateProc_BTRF2_4G
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDToString
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
</UL>

<P><STRONG><a name="[1f4]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAllocateTCBAndStack
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[1f5]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1f6]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashInfoData
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSysCfgInfo
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShakeReqProc
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTRF2_4gStartCharging
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardAuthReq_24G
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
</UL>

<P><STRONG><a name="[7f]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvBtData
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeat
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimuartInit
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendTestPktAck
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReportNotice_BTRF2_4G
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBluePair
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStopCharging
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendStartChargingAck
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReqBreak
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWUpgradeNotice
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWDownLoad
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCostTemplateUpload
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;X6ToR6HeartBatACK_BTRF2_4G
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopChargingAckBTRF2_4G
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingAckProc_24G
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargingNoticeBTRF_24G
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendReqCostTemplate_BTRF2_4G
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendEventNotice_BTRF2_4G
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardAuthReq_24G
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlAck_BTRF2_4G
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6X6BindACK_BTRF2_4G
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeREQ_BTRF2_4G
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeAckProc_BTRF2_4G
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadAckBTRF2_4G
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostTemplateAckBTRF2_4G
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthAckResult_BTRF2_4G
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGateWay24GMacAddr
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBlueName
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
</UL>

<P><STRONG><a name="[1f7]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[7e]"></a>strstr</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
</UL>

<P><STRONG><a name="[80]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StringToBCD
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendCmd
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
</UL>

<P><STRONG><a name="[a9]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Upgrade_Write
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddr
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStartCharging
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingProc_BTRF2_4G
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetName
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetGWMac
</UL>

<P><STRONG><a name="[81]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargingNotice
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingProc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCfgInit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOrderReport
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSysCfgInfo
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunChargingProc
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_UpgradeNotiProc_BTRF2_4G
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Upgrade_Write
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShakeReqProc
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStopCharging
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStartCharging
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendStartChargingAck
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeatACK
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReqCostTemlteProc
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWUpgradeNotice
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCostTemplateUpload
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Write
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistoryOrderNum
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTRF2_4gStartCharging
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isStartChargingBTRF2_4G
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeartBat_BTRF2_4G
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlProc_BTRF2_4G
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6X6BindREQ_BTRF2_4G
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6ToX6StopChargingAckBTRF2_4G
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeREQ_BTRF2_4G
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeNotiProc_BTRF2_4G
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostTemplateProc_BTRF2_4G
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_FlashCheck
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeFlashErasePage
</UL>

<P><STRONG><a name="[1f8]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[1f9]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FuseholderStatusProc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOrderReport
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSysCfgInfo
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunChargingProc
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Upgrade_Write
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddr
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStopCharging
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStartCharging
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendStartChargingAck
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCostTemplateUpload
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Write
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistoryOrderNum
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTRF2_4gStartCharging
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingProc_BTRF2_4G
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargingNoticeBTRF_24G
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendEventNotice_BTRF2_4G
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardAuthReq_24G
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6ToX6StopChargingAckBTRF2_4G
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeREQ_BTRF2_4G
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostTemplateProc_BTRF2_4G
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
</UL>

<P><STRONG><a name="[1fa]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[1fb]"></a>_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>__0sscanf</STRONG> (Thumb, 50 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
</UL>

<P><STRONG><a name="[4d]"></a>_scanf_int</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[65]"></a>_scanf_string</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, _scanf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[167]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRMSU
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRMSI
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPower
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCpuTemp
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCpuTemp
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[58]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRMSU
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRMSI
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPower
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCpuTemp
</UL>

<P><STRONG><a name="[168]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRMSU
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRMSI
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPower
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_d2iz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCpuTemp
</UL>

<P><STRONG><a name="[1d6]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[1fc]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[1fd]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1fe]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>localtime</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, localtime_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = localtime &rArr; _localtime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinuxTickToDay
</UL>

<P><STRONG><a name="[47]"></a>_localtime</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, localtime_i.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _localtime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
</UL>

<P><STRONG><a name="[4e]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[4c]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[28]"></a>_sgetc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>_sbackspace</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[1ff]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[59]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[54]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[53]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1af]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[200]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>isspace</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, isspace_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ctype_lookup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[5d]"></a>__vfscanf</STRONG> (Thumb, 812 bytes, Stack size 80 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real (Weak Reference)
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[62]"></a>__ctype_lookup</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ctype_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[201]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[202]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[7]"></a>AES_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht6xxx_it.o(i.AES_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[f2]"></a>AES_encrypt</STRONG> (Thumb, 954 bytes, Stack size 60 bytes, aes.o(i.AES_encrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = AES_encrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
</UL>

<P><STRONG><a name="[f1]"></a>AES_set_encrypt_key</STRONG> (Thumb, 734 bytes, Stack size 32 bytes, aes.o(i.AES_set_encrypt_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AES_set_encrypt_key
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
</UL>

<P><STRONG><a name="[18a]"></a>Asc2Int</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, main_handle.o(i.Asc2Int))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StringToBCD
</UL>

<P><STRONG><a name="[66]"></a>BCDToString</STRONG> (Thumb, 86 bytes, Stack size 56 bytes, main_handle.o(i.BCDToString))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BCDToString
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetName
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetGWMac
</UL>

<P><STRONG><a name="[68]"></a>BSP_Init</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, main_handle.o(i.BSP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = BSP_Init &rArr; Flash_Init &rArr; osMutexCreate &rArr; xQueueCreateMutex &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimuartInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC8042B_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TBSConfig
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunGpioInit
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMU_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
</UL>

<P><STRONG><a name="[73]"></a>BTRF2_4gStartCharging</STRONG> (Thumb, 632 bytes, Stack size 72 bytes, charger.o(i.BTRF2_4gStartCharging))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = BTRF2_4gStartCharging &rArr; FlashWriteGunInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunStatus
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfoData
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOn
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStartCharging
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isStartChargingBTRF2_4G
</UL>

<P><STRONG><a name="[7b]"></a>BlueCheckRes</STRONG> (Thumb, 570 bytes, Stack size 88 bytes, ckb24_um.o(i.BlueCheckRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = BlueCheckRes &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Get
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSystemInfoData
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isArraryEmpty
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StringToBCD
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfo_2_Data
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteDataToSystemInfo1
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendCmd
</UL>

<P><STRONG><a name="[88]"></a>BlueCostTemlteAck</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, blue.o(i.BlueCostTemlteAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BlueCostTemlteAck &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
</UL>

<P><STRONG><a name="[89]"></a>BlueCostTemplateUpload</STRONG> (Thumb, 198 bytes, Stack size 136 bytes, blue.o(i.BlueCostTemplateUpload))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = BlueCostTemplateUpload &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReqCostTemlteProc
</UL>

<P><STRONG><a name="[8c]"></a>BlueFWDownLoad</STRONG> (Thumb, 196 bytes, Stack size 144 bytes, blue.o(i.BlueFWDownLoad))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = BlueFWDownLoad &rArr; COM_Upgrade_Write &rArr; Upgrade_Write &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Upgrade_Write
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
</UL>

<P><STRONG><a name="[8f]"></a>BlueFWUpgradeNotice</STRONG> (Thumb, 176 bytes, Stack size 144 bytes, blue.o(i.BlueFWUpgradeNotice))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = BlueFWUpgradeNotice &rArr; Upgrade_Init &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
</UL>

<P><STRONG><a name="[91]"></a>BluePktProc</STRONG> (Thumb, 286 bytes, Stack size 24 bytes, blue.o(i.BluePktProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = BluePktProc &rArr; BlueReqBreak &rArr; SetBluePair &rArr; BlueSendCmd &rArr; BlueCheckRes &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShakeReqProc
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddr
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStopCharging
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStartCharging
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeatACK
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReqCostTemlteProc
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReqBreak
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWUpgradeNotice
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWDownLoad
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCostTemlteAck
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenUpgradeReqestFlag
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenBlueToothUpgradeFlag
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseUARTUpgradeFlag
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvBtData
</UL>

<P><STRONG><a name="[9b]"></a>BlueReqBreak</STRONG> (Thumb, 126 bytes, Stack size 128 bytes, blue.o(i.BlueReqBreak))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = BlueReqBreak &rArr; SetBluePair &rArr; BlueSendCmd &rArr; BlueCheckRes &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBluePair
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
</UL>

<P><STRONG><a name="[97]"></a>BlueReqCostTemlteProc</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, blue.o(i.BlueReqCostTemlteProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = BlueReqCostTemlteProc &rArr; BlueCostTemplateUpload &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCostTemplateUpload
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
</UL>

<P><STRONG><a name="[9e]"></a>BlueSendCmd</STRONG> (Thumb, 106 bytes, Stack size 96 bytes, ckb24_um.o(i.BlueSendCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = BlueSendCmd &rArr; BlueCheckRes &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Send
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsReset
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleReconnect
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBluePair
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGateWay24GMacAddr
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBlueName
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetDevt
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleCheckReset
</UL>

<P><STRONG><a name="[a2]"></a>BlueSendHeartBeat</STRONG> (Thumb, 328 bytes, Stack size 160 bytes, blue.o(i.BlueSendHeartBeat))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = BlueSendHeartBeat &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunStatus
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCpuTemp
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_UMTask
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShakeReqProc
</UL>

<P><STRONG><a name="[96]"></a>BlueSendHeartBeatACK</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, blue.o(i.BlueSendHeartBeatACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = BlueSendHeartBeatACK &rArr; GetRtcCount &rArr; GetTimeStamp &rArr; mktime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtcCount
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingGunCnt
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
</UL>

<P><STRONG><a name="[a6]"></a>BlueSendStartChargingAck</STRONG> (Thumb, 220 bytes, Stack size 160 bytes, blue.o(i.BlueSendStartChargingAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = BlueSendStartChargingAck &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStartCharging
</UL>

<P><STRONG><a name="[94]"></a>BlueStartCharging</STRONG> (Thumb, 530 bytes, Stack size 48 bytes, blue.o(i.BlueStartCharging))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = BlueStartCharging &rArr; BlueSendStartChargingAck &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSystemInfoData
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendStartChargingAck
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeechChargeing
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistoryOrderNum
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckStartPara
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTRF2_4gStartCharging
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
</UL>

<P><STRONG><a name="[95]"></a>BlueStopCharging</STRONG> (Thumb, 374 bytes, Stack size 168 bytes, blue.o(i.BlueStopCharging))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = BlueStopCharging &rArr; Proto2_4gStopCharging &rArr; SaveOrderReport &rArr; FlashWriteGunInfo_1_Data &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunStatus
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Proto2_4gStopCharging
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
</UL>

<P><STRONG><a name="[9c]"></a>BlueToothSet2_4gAddr</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, blue.o(i.BlueToothSet2_4gAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = BlueToothSet2_4gAddr &rArr; FlashWriteGunInfo_1_Data &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfo_1_Data
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfo_2_Data
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddrAck
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
</UL>

<P><STRONG><a name="[ad]"></a>BlueToothSet2_4gAddrAck</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, blue.o(i.BlueToothSet2_4gAddrAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = BlueToothSet2_4gAddrAck &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPktSum
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddr
</UL>

<P><STRONG><a name="[34]"></a>BuleCheckReset</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, ckb24_um.o(i.BuleCheckReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = BuleCheckReset &rArr; BlueSendCmd &rArr; BlueCheckRes &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKB24_UM_HardReset
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ckb24_um.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>BuleModeDevt</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, ckb24_um.o(i.BuleModeDevt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BuleModeDevt &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBlueModeCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ckb24_um.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>BuleModeEcho</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, ckb24_um.o(i.BuleModeEcho))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BuleModeEcho &rArr; CheckBlueModeCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBlueModeCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ckb24_um.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>BuleModeGWMac</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, ckb24_um.o(i.BuleModeGWMac))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BuleModeGWMac &rArr; CheckBlueModeCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBlueModeCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ckb24_um.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>BuleModeGetName</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, ckb24_um.o(i.BuleModeGetName))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BuleModeGetName &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBlueModeCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ckb24_um.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>BuleModePair</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, ckb24_um.o(i.BuleModePair))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BuleModePair &rArr; CheckBlueModeCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBlueModeCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ckb24_um.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>BuleModeVers</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, ckb24_um.o(i.BuleModeVers))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BuleModeVers &rArr; CheckBlueModeCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBlueModeCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ckb24_um.o(.constdata)
</UL>
<P><STRONG><a name="[b2]"></a>BuleReconnect</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, ckb24_um.o(i.BuleReconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = BuleReconnect &rArr; BlueSendCmd &rArr; BlueCheckRes &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_UMTask
</UL>

<P><STRONG><a name="[3a]"></a>BuleSetDevt</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, ckb24_um.o(i.BuleSetDevt))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = BuleSetDevt &rArr; BlueSendCmd &rArr; BlueCheckRes &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ckb24_um.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>BuleSetGWMac</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, ckb24_um.o(i.BuleSetGWMac))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = BuleSetGWMac &rArr; SetGateWay24GMacAddr &rArr; BlueSendCmd &rArr; BlueCheckRes &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isArraryEmpty
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDToString
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGateWay24GMacAddr
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ckb24_um.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>BuleSetName</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, ckb24_um.o(i.BuleSetName))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = BuleSetName &rArr; SetBlueName &rArr; BlueSendCmd &rArr; BlueCheckRes &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isArraryEmpty
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDToString
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBlueName
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ckb24_um.o(.constdata)
</UL>
<P><STRONG><a name="[b5]"></a>CK24_System_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ckb24_um_handle.o(i.CK24_System_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = CK24_System_Init &rArr; osSemaphoreCreate &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_UMTask
</UL>

<P><STRONG><a name="[30]"></a>CK24_UMTask</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, ckb24_um_handle.o(i.CK24_UMTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = CK24_UMTask &rArr; RecvBtData &rArr; BluePktProc &rArr; BlueReqBreak &rArr; SetBluePair &rArr; BlueSendCmd &rArr; BlueCheckRes &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvBtData
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpgradeWaitTimer
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKB24_UM_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleReconnect
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeat
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpackRecv24GPack
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKBRecvProc
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_System_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReadCardHandle
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_handle.o(i.vMainTask)
</UL>
<P><STRONG><a name="[bf]"></a>CKB24_UMGPIO_Conf</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, ckb24_um.o(i.CKB24_UMGPIO_Conf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CKB24_UMGPIO_Conf &rArr; HT_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKB24_UM_Init
</UL>

<P><STRONG><a name="[b0]"></a>CKB24_UM_HardReset</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ckb24_um.o(i.CKB24_UM_HardReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CKB24_UM_HardReset &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsReset
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleCheckReset
</UL>

<P><STRONG><a name="[b8]"></a>CKB24_UM_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ckb24_um.o(i.CKB24_UM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = CKB24_UM_Init &rArr; UART4_Init &rArr; osMutexCreate &rArr; xQueueCreateMutex &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKB24_UMGPIO_Conf
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_UMTask
</UL>

<P><STRONG><a name="[bb]"></a>CKBRecvProc</STRONG> (Thumb, 958 bytes, Stack size 296 bytes, ckb24_um_handle.o(i.CKBRecvProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = CKBRecvProc &rArr; PrintfData &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Put
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Get
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_UMTask
</UL>

<P><STRONG><a name="[c3]"></a>COM_UpgradeNotiProc_BTRF2_4G</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, comm_proto.o(i.COM_UpgradeNotiProc_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = COM_UpgradeNotiProc_BTRF2_4G &rArr; Upgrade_Init &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenUpgradeReqestFlag
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenUARTUpgradeFlag
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseBlueToothUpgradeFlag
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
</UL>

<P><STRONG><a name="[8d]"></a>COM_Upgrade_Write</STRONG> (Thumb, 354 bytes, Stack size 56 bytes, upgrade.o(i.COM_Upgrade_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = COM_Upgrade_Write &rArr; Upgrade_Write &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Write
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWDownLoad
</UL>

<P><STRONG><a name="[c8]"></a>CalcuElec</STRONG> (Thumb, 502 bytes, Stack size 24 bytes, emu_info.o(i.CalcuElec))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CalcuElec &rArr; __aeabi_uldivmod &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEMU_Info
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_0_IRQHandler
</UL>

<P><STRONG><a name="[ca]"></a>CardAuthAckResult_BTRF2_4G</STRONG> (Thumb, 58 bytes, Stack size 136 bytes, 24g_proto.o(i.CardAuthAckResult_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = CardAuthAckResult_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
</UL>

<P><STRONG><a name="[cc]"></a>CardAuthAck_BTRF2_4G</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, 24g_proto.o(i.CardAuthAck_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = CardAuthAck_BTRF2_4G &rArr; GetRtcCount &rArr; GetTimeStamp &rArr; mktime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCheckTimeOver
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OptFailNotice
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
</UL>

<P><STRONG><a name="[cf]"></a>CardAuthResult_BTRF2_4G</STRONG> (Thumb, 966 bytes, Stack size 32 bytes, 24g_proto.o(i.CardAuthResult_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = CardAuthResult_BTRF2_4G &rArr; CardAuthAckResult_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempTake
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempGive
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSystemInfoData
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeechCardBalance
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistoryOrderNum
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckStartPara
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeechSelectGun
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthAckResult_BTRF2_4G
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
</UL>

<P><STRONG><a name="[31]"></a>CardAuthTask</STRONG> (Thumb, 206 bytes, Stack size 0 bytes, cardauth_handle.o(i.CardAuthTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = CardAuthTask &rArr; ReadCardHandle &rArr; Check_M1_Card &rArr; TypeA_CardActivate &rArr; TypeA_Anticollision &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isTheSameCard
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCardHandle
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReadCardTime
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReadCardFlag
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanReadCardTime
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanReadCardFlag
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_StandBy
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isStartChargingBTRF2_4G
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingAckProc_24G
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardAuthReq_24G
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_handle.o(i.vMainTask)
</UL>
<P><STRONG><a name="[de]"></a>CardBalanceSpeech</STRONG> (Thumb, 488 bytes, Stack size 16 bytes, sc8042b.o(i.CardBalanceSpeech))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CardBalanceSpeech &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeechCardBalance
</UL>

<P><STRONG><a name="[df]"></a>Charger_Init</STRONG> (Thumb, 26 bytes, Stack size 216 bytes, charger.o(i.Charger_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = Charger_Init &rArr; ReadFlashInfoData &rArr; Flash_Read &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashInfoData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowGunInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[e2]"></a>ChargingCtrlProc</STRONG> (Thumb, 1286 bytes, Stack size 80 bytes, charger.o(i.ChargingCtrlProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = ChargingCtrlProc &rArr; Proto2_4gStopCharging &rArr; SaveOrderReport &rArr; FlashWriteGunInfo_1_Data &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunStatus
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSystemInfoData
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_mSec
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunChargingProc
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Proto2_4gStopCharging
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveStopChargingNotice_BTRF2_4G
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGunWithChargingCtrlProc
</UL>

<P><STRONG><a name="[e6]"></a>ChargingProc</STRONG> (Thumb, 656 bytes, Stack size 56 bytes, charger.o(i.ChargingProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = ChargingProc &rArr; Proto2_4gStopCharging &rArr; SaveOrderReport &rArr; FlashWriteGunInfo_1_Data &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfoData
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Proto2_4gStopCharging
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOn
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveStopChargingNotice_BTRF2_4G
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGunWithChargingCtrlProc
</UL>

<P><STRONG><a name="[b1]"></a>CheckBlueModeCmd</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ckb24_um.o(i.CheckBlueModeCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckBlueModeCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleModeVers
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleModePair
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleModeGetName
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleModeGWMac
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleModeEcho
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleModeDevt
</UL>

<P><STRONG><a name="[e7]"></a>CheckCardTimeLenth</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, main_handle.o(i.CheckCardTimeLenth))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckCardTimeLenth
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReadCardTime
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCardHandle
</UL>

<P><STRONG><a name="[e9]"></a>CheckGunStatu</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, charger.o(i.CheckGunStatu))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CheckGunStatu &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunStatus
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckStartPara
</UL>

<P><STRONG><a name="[ea]"></a>CheckIdlePin</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, ckb24_um_handle.o(i.CheckIdlePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CheckIdlePin &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsRead
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
</UL>

<P><STRONG><a name="[179]"></a>CheckOrderData</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, main_handle.o(i.CheckOrderData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CheckOrderData
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
</UL>

<P><STRONG><a name="[a8]"></a>CheckStartPara</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, charger.o(i.CheckStartPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = CheckStartPara &rArr; OptFailNotice &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckGunStatu
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OptFailNotice
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCostMode
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStartCharging
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingProc_BTRF2_4G
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
</UL>

<P><STRONG><a name="[8a]"></a>CheckSum</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main_handle.o(i.CheckSum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeat
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackSendOuterBT24GData
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashInfoData
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDebugPkt
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStopCharging
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendStartChargingAck
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReqBreak
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWUpgradeNotice
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWDownLoad
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCostTemplateUpload
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackSend24GData
</UL>

<P><STRONG><a name="[be]"></a>CheckUpgradeWaitTimer</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, 24g_proto.o(i.CheckUpgradeWaitTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckUpgradeWaitTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenUpgradeReqestFlag
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUpgradeReqestFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_UMTask
</UL>

<P><STRONG><a name="[ee]"></a>Check_M1_Card</STRONG> (Thumb, 338 bytes, Stack size 336 bytes, main_handle.o(i.Check_M1_Card))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = Check_M1_Card &rArr; TypeA_CardActivate &rArr; TypeA_Anticollision &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Halt
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_CardActivate
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Blockread
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Auth
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_encrypt_key
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_encrypt
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReadCardHandle
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCardHandle
</UL>

<P><STRONG><a name="[d4]"></a>CleanReadCardFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main_handle.o(i.CleanReadCardFlag))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
</UL>

<P><STRONG><a name="[d5]"></a>CleanReadCardTime</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main_handle.o(i.CleanReadCardTime))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
</UL>

<P><STRONG><a name="[186]"></a>CleanStartChargingNotice_BTRF2_4G</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, 24g_proto.o(i.CleanStartChargingNotice_BTRF2_4G))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingNoticeACK_BTRF2_4G
</UL>

<P><STRONG><a name="[15d]"></a>CleanStopChargingNotice_BTRF2_4G</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, 24g_proto.o(i.CleanStopChargingNotice_BTRF2_4G))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6ToX6StopChargingAckBTRF2_4G
</UL>

<P><STRONG><a name="[f6]"></a>ClearUpgradeWaitTimer</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, 24g_proto.o(i.ClearUpgradeWaitTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClearUpgradeWaitTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeNotiProc_BTRF2_4G
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeAck_BTRF2_4G
</UL>

<P><STRONG><a name="[f7]"></a>Clear_BitMask</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, fm175xx.o(i.Clear_BitMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Clear_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Halt
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Request
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Rf
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_ConfigISOType
</UL>

<P><STRONG><a name="[fa]"></a>Clear_FIFO</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, fm175xx.o(i.Clear_FIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Blockread
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Auth
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
</UL>

<P><STRONG><a name="[c4]"></a>CloseBlueToothUpgradeFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, 24g_proto.o(i.CloseBlueToothUpgradeFlag))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_UpgradeNotiProc_BTRF2_4G
</UL>

<P><STRONG><a name="[175]"></a>CloseCheckTimeOver</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main_handle.o(i.CloseCheckTimeOver))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sc8042bSpeechStartChargerFail
</UL>

<P><STRONG><a name="[99]"></a>CloseUARTUpgradeFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, 24g_proto.o(i.CloseUARTUpgradeFlag))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
</UL>

<P><STRONG><a name="[12a]"></a>CloseUpgradeReqestFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, 24g_proto.o(i.CloseUpgradeReqestFlag))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeAck_BTRF2_4G
</UL>

<P><STRONG><a name="[32]"></a>ComTask</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, com_handle.o(i.ComTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = ComTask &rArr; RestoreGunWithChargingCtrlProc &rArr; ChargingCtrlProc &rArr; Proto2_4gStopCharging &rArr; SaveOrderReport &rArr; FlashWriteGunInfo_1_Data &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessElec
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Get
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sc8042bSpeechStartChargerFail
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGunWithChargingCtrlProc
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GreenLedToggle
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_StandBy
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_handle.o(i.vMainTask)
</UL>
<P><STRONG><a name="[102]"></a>CostTemplateAckBTRF2_4G</STRONG> (Thumb, 64 bytes, Stack size 136 bytes, 24g_proto.o(i.CostTemplateAckBTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = CostTemplateAckBTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostTemplateProc_BTRF2_4G
</UL>

<P><STRONG><a name="[103]"></a>CostTemplateProc_BTRF2_4G</STRONG> (Thumb, 710 bytes, Stack size 64 bytes, 24g_proto.o(i.CostTemplateProc_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = CostTemplateProc_BTRF2_4G &rArr; CostTemplateAckBTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteCostTemplateData
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OptFailNotice
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostTemplateAckBTRF2_4G
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
</UL>

<P><STRONG><a name="[101]"></a>DebugPktProc</STRONG> (Thumb, 1960 bytes, Stack size 32 bytes, comm_proto.o(i.DebugPktProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = DebugPktProc &rArr; COM_UpgradeNotiProc_BTRF2_4G &rArr; Upgrade_Init &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSystemInfoData
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfo_3_Data
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsReset
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDebugPkt
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTest
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_UpgradeNotiProc_BTRF2_4G
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfo_2_Data
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteDataToSystemInfo1
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Upgrade_Write
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtcCount
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOn
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOff
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseUARTUpgradeFlag
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComTask
</UL>

<P><STRONG><a name="[157]"></a>Delay_100uSec</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, delay.o(i.Delay_100uSec))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
</UL>

<P><STRONG><a name="[e3]"></a>Delay_mSec</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, delay.o(i.Delay_mSec))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimuUartSendData
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_StandBy
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_TaskSystem
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Rf
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_HardReset
</UL>

<P><STRONG><a name="[69]"></a>EMU_Init</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, emu.o(i.EMU_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EMU_Init &rArr; get_emu_var_default
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_EPADR
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_emu_var_default
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emu_var_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[10e]"></a>EMU_Proc</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, emu.o(i.EMU_Proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EMU_Proc &rArr; emu_var_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_EPADR
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emu_var_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_0_IRQHandler
</UL>

<P><STRONG><a name="[8]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI5_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXTI6_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI6_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[dd]"></a>Enter_StandBy</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, pmu.o(i.Enter_StandBy))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Enter_StandBy &rArr; enter_hold_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_mSec
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchTo_Flrc
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_RTC_TMRConfig
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_RTC_ITConfig
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_hold_init
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOff_MCU
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_PMUState_FlagStatusGet
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComTask
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_TaskSystem
</UL>

<P><STRONG><a name="[7d]"></a>FIFO_S_Get</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, fifo.o(i.FIFO_S_Get))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvBtData
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpackRecv24GPack
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKBRecvProc
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComTask
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
</UL>

<P><STRONG><a name="[b7]"></a>FIFO_S_Init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, fifo.o(i.FIFO_S_Init))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_System_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Init
</UL>

<P><STRONG><a name="[c2]"></a>FIFO_S_Put</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, fifo.o(i.FIFO_S_Put))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FIFO_S_Put
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKBRecvProc
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[11b]"></a>FM175XX_HardReset</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, fm175xx.o(i.FM175XX_HardReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FM175XX_HardReset &rArr; Read_Reg &rArr; SPIRead &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_mSec
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsReset
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Init
</UL>

<P><STRONG><a name="[11c]"></a>FM175XX_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, fm175xx.o(i.FM175XX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = FM175XX_Init &rArr; Set_Rf &rArr; Clear_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_Init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Rf
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_ConfigISOType
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_HardReset
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
</UL>

<P><STRONG><a name="[120]"></a>FWDownLoadAckBTRF2_4G</STRONG> (Thumb, 124 bytes, Stack size 144 bytes, 24g_proto.o(i.FWDownLoadAckBTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = FWDownLoadAckBTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
</UL>

<P><STRONG><a name="[121]"></a>FWDownLoadProc_BTRF2_4G</STRONG> (Thumb, 562 bytes, Stack size 40 bytes, 24g_proto.o(i.FWDownLoadProc_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = FWDownLoadProc_BTRF2_4G &rArr; FWDownLoadAckBTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempTake
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempGive
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SetPos_w
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Write
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUpgradeCurrentPackage
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUpgradeReqestFlag
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadAckBTRF2_4G
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
</UL>

<P><STRONG><a name="[126]"></a>FWUpgradeAckProc_BTRF2_4G</STRONG> (Thumb, 62 bytes, Stack size 136 bytes, 24g_proto.o(i.FWUpgradeAckProc_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = FWUpgradeAckProc_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeNotiProc_BTRF2_4G
</UL>

<P><STRONG><a name="[127]"></a>FWUpgradeAck_BTRF2_4G</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, 24g_proto.o(i.FWUpgradeAck_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FWUpgradeAck_BTRF2_4G &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUpgradeReqestFlag
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUARTUpgradeFlag
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueToothUpgradeFlag
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseUpgradeReqestFlag
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearUpgradeWaitTimer
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
</UL>

<P><STRONG><a name="[12b]"></a>FWUpgradeNotiProc_BTRF2_4G</STRONG> (Thumb, 374 bytes, Stack size 48 bytes, 24g_proto.o(i.FWUpgradeNotiProc_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = FWUpgradeNotiProc_BTRF2_4G &rArr; FWUpgradeAckProc_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUARTUpgradeFlag
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueToothUpgradeFlag
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeAckProc_BTRF2_4G
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearUpgradeWaitTimer
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
</UL>

<P><STRONG><a name="[12c]"></a>FWUpgradeREQ_BTRF2_4G</STRONG> (Thumb, 120 bytes, Stack size 144 bytes, 24g_proto.o(i.FWUpgradeREQ_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = FWUpgradeREQ_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
</UL>

<P><STRONG><a name="[10a]"></a>FlashTest</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, comm_proto.o(i.FlashTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = FlashTest &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_EraseALL
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
</UL>

<P><STRONG><a name="[104]"></a>FlashWriteCostTemplateData</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_usr.o(i.FlashWriteCostTemplateData))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = FlashWriteCostTemplateData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSysCfgInfo
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostTemplateProc_BTRF2_4G
</UL>

<P><STRONG><a name="[124]"></a>FlashWriteData</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, flash_usr.o(i.FlashWriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_EraseALL
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSystemInfoData
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfo_3_Data
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfo_1_Data
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfoData
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteCostTemplateData
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveElec
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfo_2_Data
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteDataToSystemInfo1
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
</UL>

<P><STRONG><a name="[84]"></a>FlashWriteDataToSystemInfo1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_usr.o(i.FlashWriteDataToSystemInfo1))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = FlashWriteDataToSystemInfo1 &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
</UL>

<P><STRONG><a name="[7a]"></a>FlashWriteGunInfoData</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_usr.o(i.FlashWriteGunInfoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = FlashWriteGunInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingProc
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSysCfgInfo
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunChargingProc
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Proto2_4gStopCharging
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTRF2_4gStartCharging
</UL>

<P><STRONG><a name="[ac]"></a>FlashWriteGunInfo_1_Data</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_usr.o(i.FlashWriteGunInfo_1_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = FlashWriteGunInfo_1_Data &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOrderReport
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSysCfgInfo
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddr
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistoryOrderNum
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6ToX6StopChargingAckBTRF2_4G
</UL>

<P><STRONG><a name="[87]"></a>FlashWriteGunInfo_2_Data</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_usr.o(i.FlashWriteGunInfo_2_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = FlashWriteGunInfo_2_Data &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddr
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
</UL>

<P><STRONG><a name="[108]"></a>FlashWriteGunInfo_3_Data</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_usr.o(i.FlashWriteGunInfo_3_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = FlashWriteGunInfo_3_Data &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSysCfgInfo
</UL>

<P><STRONG><a name="[86]"></a>FlashWriteSystemInfoData</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_usr.o(i.FlashWriteSystemInfoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FuseholderStatusProc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSysCfgInfo
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunChargingProc
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStartCharging
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isStartChargingBTRF2_4G
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingProc_BTRF2_4G
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
</UL>

<P><STRONG><a name="[12d]"></a>Flash_EraseALL</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, flash_usr.o(i.Flash_EraseALL))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Flash_EraseALL &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_Flash_PageErase
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTest
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Init
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
</UL>

<P><STRONG><a name="[131]"></a>Flash_ErasePage</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, flash_usr.o(i.Flash_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Flash_ErasePage &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_Flash_PageErase
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOrderReport
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeFlashErasePage
</UL>

<P><STRONG><a name="[6d]"></a>Flash_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_usr.o(i.Flash_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Flash_Init &rArr; osMutexCreate &rArr; xQueueCreateMutex &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[133]"></a>Flash_Read</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, flash_usr.o(i.Flash_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Flash_Read &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_Flash_ByteRead
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashInfoData
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOrderReport
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_FlashCheck
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeFlashErasePage
</UL>

<P><STRONG><a name="[135]"></a>Flash_SetPos_r</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, flash_usr.o(i.Flash_SetPos_r))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Flash_SetPos_r &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashInfoData
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOrderReport
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_FlashCheck
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeFlashErasePage
</UL>

<P><STRONG><a name="[123]"></a>Flash_SetPos_w</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, flash_usr.o(i.Flash_SetPos_w))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Flash_SetPos_w &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOrderReport
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Write
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeFlashErasePage
</UL>

<P><STRONG><a name="[c6]"></a>Flash_Write</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, flash_usr.o(i.Flash_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_Flash_ByteWrite
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_Flash_ByteRead
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOrderReport
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTest
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Upgrade_Write
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Write
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeFlashErasePage
</UL>

<P><STRONG><a name="[137]"></a>FuseholderStatusProc</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, charger.o(i.FuseholderStatusProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = FuseholderStatusProc &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSystemInfoData
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
</UL>

<P><STRONG><a name="[128]"></a>GetBlueToothUpgradeFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, 24g_proto.o(i.GetBlueToothUpgradeFlag))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeNotiProc_BTRF2_4G
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeAck_BTRF2_4G
</UL>

<P><STRONG><a name="[a4]"></a>GetChargingGunCnt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, charger.o(i.GetChargingGunCnt))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeatACK
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
</UL>

<P><STRONG><a name="[138]"></a>GetChargingTime</STRONG> (Thumb, 542 bytes, Stack size 64 bytes, charger.o(i.GetChargingTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GetChargingTime &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunChargingProc
</UL>

<P><STRONG><a name="[ec]"></a>GetCostMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, charger.o(i.GetCostMode))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckStartPara
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
</UL>

<P><STRONG><a name="[a3]"></a>GetCpuTemp</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, main_handle.o(i.GetCpuTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GetCpuTemp &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeat
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeartBat_BTRF2_4G
</UL>

<P><STRONG><a name="[6b]"></a>GetCurrentTime</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, rtc.o(i.GetCurrentTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_RTC_Read
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleReconnect
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeat
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpackRecv24GPack
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIdlePin
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKBRecvProc
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargingNotice
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGunStatus
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Blockread
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunGpioInit
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FuseholderStatusProc
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ErasePage
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComTask
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingProc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_UMTask
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isTheSameCard
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sc8042bSpeechStartChargerFail
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOrderReport
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowGunInfo
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunChargingProc
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingTime
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckGunStatu
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Upgrade_Write
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShakeReqProc
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddrAck
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddr
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStopCharging
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStartCharging
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendStartChargingAck
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeatACK
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReqCostTemlteProc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWUpgradeNotice
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWDownLoad
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCostTemlteAck
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Write
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Init
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempNotice
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OptFailNotice
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOn
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOff
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistoryOrderNum
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckStartPara
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTRF2_4gStartCharging
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isStartChargingBTRF2_4G
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingProc_BTRF2_4G
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlProc_BTRF2_4G
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6ToX6StopChargingAckBTRF2_4G
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6ToX6ScanCodeStartChargerAck
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeREQ_BTRF2_4G
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeNotiProc_BTRF2_4G
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeAck_BTRF2_4G
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadAckBTRF2_4G
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostTemplateProc_BTRF2_4G
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthAck_BTRF2_4G
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetName
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetGWMac
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetDevt
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleModeGetName
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleModeDevt
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleCheckReset
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_FlashCheck
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeFlashErasePage
</UL>

<P><STRONG><a name="[78]"></a>GetGunStatus</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, emu_info.o(i.GetGunStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetGunStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeat
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckGunStatu
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStopCharging
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTRF2_4gStartCharging
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;X6ToR6HeartBatACK_BTRF2_4G
</UL>

<P><STRONG><a name="[a7]"></a>GetHistoryOrderNum</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, blue.o(i.GetHistoryOrderNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GetHistoryOrderNum &rArr; FlashWriteGunInfo_1_Data &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfo_1_Data
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStartCharging
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingProc_BTRF2_4G
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
</UL>

<P><STRONG><a name="[af]"></a>GetPktSum</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, 24g_proto.o(i.GetPktSum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetPktSum
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShakeReqProc
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddrAck
</UL>

<P><STRONG><a name="[d7]"></a>GetReadCardFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main_handle.o(i.GetReadCardFlag))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
</UL>

<P><STRONG><a name="[d9]"></a>GetReadCardTime</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main_handle.o(i.GetReadCardTime))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
</UL>

<P><STRONG><a name="[74]"></a>GetRtcCount</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rtc.o(i.GetRtcCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = GetRtcCount &rArr; GetTimeStamp &rArr; mktime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingProc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGunWithChargingCtrlProc
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCardHandle
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GreenLedToggle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunChargingProc
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShakeReqProc
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStopCharging
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendStartChargingAck
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeatACK
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTRF2_4gStartCharging
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingProc_BTRF2_4G
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingNoticeACK_BTRF2_4G
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardAuthReq_24G
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6ToX6StopChargingAckBTRF2_4G
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthAck_BTRF2_4G
</UL>

<P><STRONG><a name="[109]"></a>GetTimeStamp</STRONG> (Thumb, 76 bytes, Stack size 56 bytes, rtc.o(i.GetTimeStamp))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = GetTimeStamp &rArr; mktime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_RTC_Read
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
</UL>

<P><STRONG><a name="[129]"></a>GetUARTUpgradeFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, 24g_proto.o(i.GetUARTUpgradeFlag))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeNotiProc_BTRF2_4G
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeAck_BTRF2_4G
</UL>

<P><STRONG><a name="[122]"></a>GetUpgradeCurrentPackage</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, upgrade.o(i.GetUpgradeCurrentPackage))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
</UL>

<P><STRONG><a name="[ed]"></a>GetUpgradeReqestFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, 24g_proto.o(i.GetUpgradeReqestFlag))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpgradeWaitTimer
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeAck_BTRF2_4G
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
</UL>

<P><STRONG><a name="[fd]"></a>GreenLedToggle</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, main_handle.o(i.GreenLedToggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = GreenLedToggle &rArr; GetRtcCount &rArr; GetTimeStamp &rArr; mktime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsToggle
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComTask
</UL>

<P><STRONG><a name="[e4]"></a>GunChargingProc</STRONG> (Thumb, 1758 bytes, Stack size 64 bytes, charger.o(i.GunChargingProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GunChargingProc &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSystemInfoData
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfoData
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingTime
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOff
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
</UL>

<P><STRONG><a name="[6e]"></a>GunGpioInit</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gun.o(i.GunGpioInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GunGpioInit &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnOffAllGun
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RELAY_Init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[107]"></a>GunTurnOff</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, gun.o(i.GunTurnOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GunTurnOff &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsReset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlBtRf2_4g
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunChargingProc
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Proto2_4gStopCharging
</UL>

<P><STRONG><a name="[79]"></a>GunTurnOn</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, gun.o(i.GunTurnOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GunTurnOn &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsReset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlBtRf2_4g
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGunStatus
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingProc
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTRF2_4gStartCharging
</UL>

<P><STRONG><a name="[19f]"></a>HT_CMU_ClkCtrl1Config</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ht6xxx_cmu.o(i.HT_CMU_ClkCtrl1Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HT_CMU_ClkCtrl1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Init
</UL>

<P><STRONG><a name="[13e]"></a>HT_CMU_Init</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, ht6xxx_cmu.o(i.HT_CMU_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HT_CMU_Init &rArr; Wait2mS
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait2mS
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[141]"></a>HT_CMU_SysClkGet</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, ht6xxx_cmu.o(i.HT_CMU_SysClkGet))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait2mS
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_Init
</UL>

<P><STRONG><a name="[112]"></a>HT_EXTIFall_ClearITPendingBit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ht6xxx_exti.o(i.HT_EXTIFall_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI6_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_IRQHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[111]"></a>HT_EXTIFall_ITFlagStatusGet</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ht6xxx_exti.o(i.HT_EXTIFall_ITFlagStatusGet))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI6_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_IRQHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[110]"></a>HT_EXTIRise_ClearITPendingBit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ht6xxx_exti.o(i.HT_EXTIRise_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI6_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_IRQHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[10f]"></a>HT_EXTIRise_ITFlagStatusGet</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ht6xxx_exti.o(i.HT_EXTIRise_ITFlagStatusGet))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI6_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_IRQHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[134]"></a>HT_Flash_ByteRead</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ht6xxx_flash.o(i.HT_Flash_ByteRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_Flash_ByteRead
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
</UL>

<P><STRONG><a name="[19e]"></a>HT_GPIO_AFInit</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, ht6xxx_gpio.o(i.HT_GPIO_AFInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HT_GPIO_AFInit
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Init
</UL>

<P><STRONG><a name="[eb]"></a>HT_GPIO_BitsRead</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht6xxx_gpio.o(i.HT_GPIO_BitsRead))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIdlePin
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_ReadByte
</UL>

<P><STRONG><a name="[9f]"></a>HT_GPIO_BitsReset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht6xxx_gpio.o(i.HT_GPIO_BitsReset))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOn
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOff
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKB24_UM_HardReset
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendCmd
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_USART_TX_PutVal
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnOffAllGun
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_WriteByte
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_ReadByte
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_Init
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWrite
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIRead
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_HardReset
</UL>

<P><STRONG><a name="[a1]"></a>HT_GPIO_BitsSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht6xxx_gpio.o(i.HT_GPIO_BitsSet))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC8042B_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOn
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOff
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKB24_UM_HardReset
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKB24_UMGPIO_Conf
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendCmd
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimuartGpioInit
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_USART_TX_PutVal
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnOffAllGun
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_WriteByte
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_ReadByte
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_Init
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWrite
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIRead
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_HardReset
</UL>

<P><STRONG><a name="[13a]"></a>HT_GPIO_BitsToggle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht6xxx_gpio.o(i.HT_GPIO_BitsToggle))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GreenLedToggle
</UL>

<P><STRONG><a name="[c0]"></a>HT_GPIO_Init</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, ht6xxx_gpio.o(i.HT_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HT_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC8042B_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKB24_UMGPIO_Conf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimuartGpioInit
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RELAY_Init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_Init
</UL>

<P><STRONG><a name="[19d]"></a>HT_ISO7816_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht6xxx_uart&7816.o(i.HT_ISO7816_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
</UL>

<P><STRONG><a name="[19c]"></a>HT_ISO7816_ITFlagStatusGet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht6xxx_uart&7816.o(i.HT_ISO7816_ITFlagStatusGet))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
</UL>

<P><STRONG><a name="[113]"></a>HT_PMUState_FlagStatusGet</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht6xxx_pmu.o(i.HT_PMUState_FlagStatusGet))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_StandBy
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_IRQHandler
</UL>

<P><STRONG><a name="[151]"></a>HT_PMU_ClearITPendingBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht6xxx_pmu.o(i.HT_PMU_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_IRQHandler
</UL>

<P><STRONG><a name="[152]"></a>HT_PMU_ITConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ht6xxx_pmu.o(i.HT_PMU_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_Init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_hold_init
</UL>

<P><STRONG><a name="[150]"></a>HT_PMU_ITFlagStatusGet</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht6xxx_pmu.o(i.HT_PMU_ITFlagStatusGet))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_IRQHandler
</UL>

<P><STRONG><a name="[115]"></a>HT_RTC_ITConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ht6xxx_rtc.o(i.HT_RTC_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_StandBy
</UL>

<P><STRONG><a name="[160]"></a>HT_RTC_Init</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, ht6xxx_rtc.o(i.HT_RTC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[161]"></a>HT_RTC_LoadInfoData</STRONG> (Thumb, 416 bytes, Stack size 8 bytes, ht6xxx_rtc.o(i.HT_RTC_LoadInfoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HT_RTC_LoadInfoData
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[139]"></a>HT_RTC_Read</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, ht6xxx_rtc.o(i.HT_RTC_Read))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
</UL>

<P><STRONG><a name="[114]"></a>HT_RTC_TMRConfig</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ht6xxx_rtc.o(i.HT_RTC_TMRConfig))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_StandBy
</UL>

<P><STRONG><a name="[17e]"></a>HT_RTC_Write</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, ht6xxx_rtc.o(i.HT_RTC_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HT_RTC_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtcCount
</UL>

<P><STRONG><a name="[173]"></a>HT_SPI_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht6xxx_spi.o(i.HT_SPI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_IRQHandler
</UL>

<P><STRONG><a name="[172]"></a>HT_SPI_ITFlagStatusGet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht6xxx_spi.o(i.HT_SPI_ITFlagStatusGet))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_IRQHandler
</UL>

<P><STRONG><a name="[72]"></a>HT_TBSConfig</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, ht6xxx_tbs.o(i.HT_TBSConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HT_TBSConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[190]"></a>HT_TBS_ClearITPendingBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht6xxx_tbs.o(i.HT_TBS_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBS_IRQHandler
</UL>

<P><STRONG><a name="[18f]"></a>HT_TBS_ITFlagStatusGet</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht6xxx_tbs.o(i.HT_TBS_ITFlagStatusGet))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBS_IRQHandler
</UL>

<P><STRONG><a name="[192]"></a>HT_TMR_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht6xxx_timer.o(i.HT_TMR_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_3_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_2_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_0_IRQHandler
</UL>

<P><STRONG><a name="[191]"></a>HT_TMR_ITFlagStatusGet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht6xxx_timer.o(i.HT_TMR_ITFlagStatusGet))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_3_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_2_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_0_IRQHandler
</UL>

<P><STRONG><a name="[199]"></a>HT_UART_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht6xxx_uart&7816.o(i.HT_UART_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[1a0]"></a>HT_UART_ITConfig</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ht6xxx_uart&7816.o(i.HT_UART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HT_UART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Init
</UL>

<P><STRONG><a name="[198]"></a>HT_UART_ITFlagStatusGet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht6xxx_uart&7816.o(i.HT_UART_ITFlagStatusGet))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[140]"></a>HT_UART_Init</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ht6xxx_uart&7816.o(i.HT_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HT_UART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_CMU_SysClkGet
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Init
</UL>

<P><STRONG><a name="[19b]"></a>HT_UART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht6xxx_uart&7816.o(i.HT_UART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht6xxx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[142]"></a>HeartBatACK_BTRF2_4G</STRONG> (Thumb, 772 bytes, Stack size 56 bytes, 24g_proto.o(i.HeartBatACK_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = HeartBatACK_BTRF2_4G &rArr; SendOrderReport &rArr; SendOrderReportNotice_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSystemInfoData
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtcCount
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCostMode
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingGunCnt
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;X6ToR6HeartBatACK_BTRF2_4G
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendReqCostTemplate_BTRF2_4G
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeartBat_BTRF2_4G
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUpgradeReqestFlag
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUARTUpgradeFlag
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueToothUpgradeFlag
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeREQ_BTRF2_4G
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearUpgradeWaitTimer
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
</UL>

<P><STRONG><a name="[1b]"></a>I2C_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht6xxx_it.o(i.I2C_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[147]"></a>IO_USART_TX_PutVal</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, simuart.o(i.IO_USART_TX_PutVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IO_USART_TX_PutVal
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsReset
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimUartSendByte
</UL>

<P><STRONG><a name="[148]"></a>Init_TaskSystem</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(i.Init_TaskSystem))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Init_TaskSystem &rArr; SystemClock_Config &rArr; HT_CMU_Init &rArr; Wait2mS
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_Init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_StandBy
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_mSec
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13c]"></a>LED_Init</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gun.o(i.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LED_Init &rArr; HT_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunGpioInit
</UL>

<P><STRONG><a name="[14b]"></a>LinuxTickToDay</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, rtc.o(i.LinuxTickToDay))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LinuxTickToDay &rArr; localtime &rArr; _localtime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtcCount
</UL>

<P><STRONG><a name="[14c]"></a>LoadSysCfgInfo</STRONG> (Thumb, 162 bytes, Stack size 296 bytes, main_handle.o(i.LoadSysCfgInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = LoadSysCfgInfo &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashInfoData
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSystemInfoData
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfo_3_Data
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfo_1_Data
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfoData
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteCostTemplateData
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCfgInit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[f0]"></a>Mifare_Auth</STRONG> (Thumb, 140 bytes, Stack size 64 bytes, m1_card.o(i.Mifare_Auth))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Mifare_Auth &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_FIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
</UL>

<P><STRONG><a name="[f3]"></a>Mifare_Blockread</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, m1_card.o(i.Mifare_Blockread))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Mifare_Blockread &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_FIFO
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
</UL>

<P><STRONG><a name="[d1]"></a>MuxSempGive</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 24g_proto.o(i.MuxSempGive))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sc8042bSpeechStartChargerFail
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Proto2_4gStopCharging
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6ToX6StopChargingAckBTRF2_4G
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeFlashErasePage
</UL>

<P><STRONG><a name="[d0]"></a>MuxSempTake</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, 24g_proto.o(i.MuxSempTake))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MuxSempTake &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sc8042bSpeechStartChargerFail
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Proto2_4gStopCharging
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6ToX6StopChargingAckBTRF2_4G
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeFlashErasePage
</UL>

<P><STRONG><a name="[9a]"></a>OpenBlueToothUpgradeFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, 24g_proto.o(i.OpenBlueToothUpgradeFlag))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
</UL>

<P><STRONG><a name="[cd]"></a>OpenCheckTimeOver</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, main_handle.o(i.OpenCheckTimeOver))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OpenCheckTimeOver
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardAuthReq_24G
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthAck_BTRF2_4G
</UL>

<P><STRONG><a name="[181]"></a>OpenTimer</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, simuart.o(i.OpenTimer))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimuUartSendData
</UL>

<P><STRONG><a name="[c5]"></a>OpenUARTUpgradeFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, 24g_proto.o(i.OpenUARTUpgradeFlag))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_UpgradeNotiProc_BTRF2_4G
</UL>

<P><STRONG><a name="[98]"></a>OpenUpgradeReqestFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, 24g_proto.o(i.OpenUpgradeReqestFlag))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpgradeWaitTimer
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_UpgradeNotiProc_BTRF2_4G
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
</UL>

<P><STRONG><a name="[ce]"></a>OptFailNotice</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, sc8042b.o(i.OptFailNotice))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = OptFailNotice &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckStartPara
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingProc_BTRF2_4G
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostTemplateProc_BTRF2_4G
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthAck_BTRF2_4G
</UL>

<P><STRONG><a name="[6]"></a>PMU_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ht6xxx_it.o(i.PMU_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PMU_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_PMU_ITFlagStatusGet
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_PMU_ClearITPendingBit
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_PMUState_FlagStatusGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[149]"></a>PMU_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, pmu.o(i.PMU_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PMU_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_PMU_ITConfig
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_TaskSystem
</UL>

<P><STRONG><a name="[153]"></a>PackSend24GData</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, 24g_proto.o(i.PackSend24GData))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PackSend24GData &rArr; CheckSum
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
</UL>

<P><STRONG><a name="[154]"></a>PackSendOuterBT24GData</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ckb24_um_handle.o(i.PackSendOuterBT24GData))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PackSendOuterBT24GData &rArr; CheckSum
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
</UL>

<P><STRONG><a name="[14f]"></a>Pcd_Comm</STRONG> (Thumb, 492 bytes, Stack size 48 bytes, fm175xx.o(i.Pcd_Comm))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_FIFO
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_FIFO
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_FIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Halt
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Blockread
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Auth
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Select
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Request
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
</UL>

<P><STRONG><a name="[11e]"></a>Pcd_ConfigISOType</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, fm175xx.o(i.Pcd_ConfigISOType))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Pcd_ConfigISOType &rArr; Clear_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Init
</UL>

<P><STRONG><a name="[14e]"></a>Pcd_SetTimer</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, fm175xx.o(i.Pcd_SetTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Pcd_SetTimer &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Halt
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Blockread
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Auth
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Select
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Request
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
</UL>

<P><STRONG><a name="[8e]"></a>PlayVoice</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, sc8042b.o(i.PlayVoice))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PlayVoice
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsReset
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_100uSec
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReadCardHandle
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sc8042bSpeechStartChargerFail
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCardHandle
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReqBreak
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWDownLoad
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempNotice
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeechChargeing
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeechCardBalance
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OptFailNotice
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckStartPara
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeechSelectGun
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardAuthReq_24G
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlProc_BTRF2_4G
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeStart
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardBalanceSpeech
</UL>

<P><STRONG><a name="[118]"></a>PowerOff_MCU</STRONG> (Thumb, 286 bytes, Stack size 8 bytes, pmu.o(i.PowerOff_MCU))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PowerOff_MCU
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_ECADR
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_StandBy
</UL>

<P><STRONG><a name="[85]"></a>PrintfData</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, main_handle.o(i.PrintfData))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = PrintfData &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvBtData
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpackRecv24GPack
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKBRecvProc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReportNotice_BTRF2_4G
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCfgInit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOrderReport
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddr
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStartCharging
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCostTemplateUpload
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;X6ToR6HeartBatACK_BTRF2_4G
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopChargingAckBTRF2_4G
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingProc_BTRF2_4G
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingNoticeACK_BTRF2_4G
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingAckProc_24G
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargingNoticeBTRF_24G
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendReqCostTemplate_BTRF2_4G
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendEventNotice_BTRF2_4G
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardAuthReq_24G
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlAck_BTRF2_4G
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6X6BindACK_BTRF2_4G
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeREQ_BTRF2_4G
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeNotiProc_BTRF2_4G
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeAckProc_BTRF2_4G
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadAckBTRF2_4G
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostTemplateAckBTRF2_4G
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthAckResult_BTRF2_4G
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
</UL>

<P><STRONG><a name="[ff]"></a>ProcessElec</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, emu_info.o(i.ProcessElec))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = ProcessElec &rArr; SaveElec &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveElec
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComTask
</UL>

<P><STRONG><a name="[ab]"></a>Proto2_4gStopCharging</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, charger.o(i.Proto2_4gStopCharging))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = Proto2_4gStopCharging &rArr; SaveOrderReport &rArr; FlashWriteGunInfo_1_Data &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempTake
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempGive
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfoData
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOrderReport
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOff
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingProc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStopCharging
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopChargingProc_BTRF2_4G
</UL>

<P><STRONG><a name="[15b]"></a>R6ToX6ScanCodeStartChargerAck</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, 24g_proto.o(i.R6ToX6ScanCodeStartChargerAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = R6ToX6ScanCodeStartChargerAck &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
</UL>

<P><STRONG><a name="[15c]"></a>R6ToX6StopChargingAckBTRF2_4G</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, 24g_proto.o(i.R6ToX6StopChargingAckBTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = R6ToX6StopChargingAckBTRF2_4G &rArr; FlashWriteGunInfo_1_Data &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempTake
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempGive
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfo_1_Data
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanStopChargingNotice_BTRF2_4G
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
</UL>

<P><STRONG><a name="[15e]"></a>R6X6BindACK_BTRF2_4G</STRONG> (Thumb, 62 bytes, Stack size 128 bytes, 24g_proto.o(i.R6X6BindACK_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = R6X6BindACK_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6X6BindREQ_BTRF2_4G
</UL>

<P><STRONG><a name="[15f]"></a>R6X6BindREQ_BTRF2_4G</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, 24g_proto.o(i.R6X6BindREQ_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = R6X6BindREQ_BTRF2_4G &rArr; R6X6BindACK_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtcCount
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6X6BindACK_BTRF2_4G
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
</UL>

<P><STRONG><a name="[13b]"></a>RELAY_Init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, gun.o(i.RELAY_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RELAY_Init &rArr; HT_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunGpioInit
</UL>

<P><STRONG><a name="[1a]"></a>RTC_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ht6xxx_it.o(i.RTC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>RTC_Init</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, rtc.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = RTC_Init &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_RTC_LoadInfoData
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_RTC_Init
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_RTC_ITConfig
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[d6]"></a>ReadCardHandle</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, main_handle.o(i.ReadCardHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = ReadCardHandle &rArr; Check_M1_Card &rArr; TypeA_CardActivate &rArr; TypeA_Anticollision &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReadCardFlag
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCardTimeLenth
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
</UL>

<P><STRONG><a name="[c9]"></a>ReadEMU_Info</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, emu_info.o(i.ReadEMU_Info))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ReadEMU_Info &rArr; ReadRMSU &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRMSU
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRMSI
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPower
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcuElec
</UL>

<P><STRONG><a name="[166]"></a>ReadElec</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, emu_info.o(i.ReadElec))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ReadElec &rArr; ReadFlashInfoData &rArr; Flash_Read &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashInfoData
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[e0]"></a>ReadFlashInfoData</STRONG> (Thumb, 164 bytes, Stack size 56 bytes, charger.o(i.ReadFlashInfoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ReadFlashInfoData &rArr; Flash_Read &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SetPos_r
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUpgradeInit
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadElec
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charger_Init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSysCfgInfo
</UL>

<P><STRONG><a name="[164]"></a>ReadPower</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, emu.o(i.ReadPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ReadPower &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_EPADR
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEMU_Info
</UL>

<P><STRONG><a name="[163]"></a>ReadRMSI</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, emu.o(i.ReadRMSI))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ReadRMSI &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_EPADR
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEMU_Info
</UL>

<P><STRONG><a name="[165]"></a>ReadRMSU</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, emu.o(i.ReadRMSU))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ReadRMSU &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_EPADR
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEMU_Info
</UL>

<P><STRONG><a name="[169]"></a>ReadUpgradeInit</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, charger.o(i.ReadUpgradeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ReadUpgradeInit &rArr; ReadFlashInfoData &rArr; Flash_Read &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashInfoData
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[1b3]"></a>Read_ECADR</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, emu.o(i.Read_ECADR))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_emu_var_default
</UL>

<P><STRONG><a name="[10d]"></a>Read_EPADR</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, emu.o(i.Read_EPADR))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMU_Init
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRMSU
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRMSI
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPower
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMU_Proc
</UL>

<P><STRONG><a name="[156]"></a>Read_FIFO</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, fm175xx.o(i.Read_FIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read_FIFO &rArr; Read_Reg &rArr; SPIRead &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
</UL>

<P><STRONG><a name="[f8]"></a>Read_Reg</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fm175xx.o(i.Read_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Read_Reg &rArr; SPIRead &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIRead
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Auth
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_FIFO
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Rf
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_FIFO
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_HardReset
</UL>

<P><STRONG><a name="[bd]"></a>RecvBtData</STRONG> (Thumb, 352 bytes, Stack size 272 bytes, blue.o(i.RecvBtData))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = RecvBtData &rArr; BluePktProc &rArr; BlueReqBreak &rArr; SetBluePair &rArr; BlueSendCmd &rArr; BlueCheckRes &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Get
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_UMTask
</UL>

<P><STRONG><a name="[16b]"></a>RemoteCtrlAck_BTRF2_4G</STRONG> (Thumb, 66 bytes, Stack size 136 bytes, 24g_proto.o(i.RemoteCtrlAck_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = RemoteCtrlAck_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlProc_BTRF2_4G
</UL>

<P><STRONG><a name="[16d]"></a>RemoteCtrlProc_BTRF2_4G</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, 24g_proto.o(i.RemoteCtrlProc_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = RemoteCtrlProc_BTRF2_4G &rArr; RemoteCtrlAck_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlBtRf2_4g
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveStopChargingNotice_BTRF2_4G
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlAck_BTRF2_4G
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
</UL>

<P><STRONG><a name="[16e]"></a>RestoreGunStatus</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, charger.o(i.RestoreGunStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = RestoreGunStatus &rArr; GunTurnOn &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOn
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGunWithChargingCtrlProc
</UL>

<P><STRONG><a name="[100]"></a>RestoreGunWithChargingCtrlProc</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main_handle.o(i.RestoreGunWithChargingCtrlProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = RestoreGunWithChargingCtrlProc &rArr; ChargingCtrlProc &rArr; Proto2_4gStopCharging &rArr; SaveOrderReport &rArr; FlashWriteGunInfo_1_Data &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGunStatus
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingProc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComTask
</UL>

<P><STRONG><a name="[6f]"></a>SC8042B_Init</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, sc8042b.o(i.SC8042B_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SC8042B_Init &rArr; HT_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[170]"></a>SIM_SPI_Delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, simspi.o(i.SIM_SPI_Delay))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_WriteByte
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_ReadByte
</UL>

<P><STRONG><a name="[11d]"></a>SIM_SPI_Init</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, simspi.o(i.SIM_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SIM_SPI_Init &rArr; HT_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsReset
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Init
</UL>

<P><STRONG><a name="[16f]"></a>SIM_SPI_ReadByte</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, simspi.o(i.SIM_SPI_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SIM_SPI_ReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsRead
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsReset
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIRead
</UL>

<P><STRONG><a name="[171]"></a>SIM_SPI_WriteByte</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, simspi.o(i.SIM_SPI_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsReset
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWrite
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIRead
</UL>

<P><STRONG><a name="[1c]"></a>SPI0_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ht6xxx_it.o(i.SPI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_SPI_ITFlagStatusGet
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_SPI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[16a]"></a>SPIRead</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, fm175xx.o(i.SPIRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPIRead &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsReset
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_WriteByte
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
</UL>

<P><STRONG><a name="[174]"></a>SPIWrite</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, fm175xx.o(i.SPIWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsReset
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_SPI_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, port.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[159]"></a>SaveElec</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, emu_info.o(i.SaveElec))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = SaveElec &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessElec
</UL>

<P><STRONG><a name="[15a]"></a>SaveOrderReport</STRONG> (Thumb, 642 bytes, Stack size 88 bytes, main_handle.o(i.SaveOrderReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = SaveOrderReport &rArr; FlashWriteGunInfo_1_Data &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SetPos_w
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SetPos_r
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ErasePage
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfo_1_Data
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Proto2_4gStopCharging
</UL>

<P><STRONG><a name="[e5]"></a>SaveStopChargingNotice_BTRF2_4G</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, 24g_proto.o(i.SaveStopChargingNotice_BTRF2_4G))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingProc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopChargingProc_BTRF2_4G
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlProc_BTRF2_4G
</UL>

<P><STRONG><a name="[fe]"></a>Sc8042bSpeechStartChargerFail</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, main_handle.o(i.Sc8042bSpeechStartChargerFail))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Sc8042bSpeechStartChargerFail &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempTake
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempGive
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseCheckTimeOver
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComTask
</UL>

<P><STRONG><a name="[8b]"></a>SendBlueTooth2_4GPkt</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, ckb24_um_handle.o(i.SendBlueTooth2_4GPkt))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Send
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackSendOuterBT24GData
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIdlePin
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempTake
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempGive
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeat
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShakeReqProc
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddrAck
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStopCharging
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendStartChargingAck
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReqBreak
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWUpgradeNotice
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWDownLoad
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCostTemplateUpload
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
</UL>

<P><STRONG><a name="[da]"></a>SendCardAuthReq_24G</STRONG> (Thumb, 316 bytes, Stack size 144 bytes, 24g_proto.o(i.SendCardAuthReq_24G))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = SendCardAuthReq_24G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StringToBCD
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCheckTimeOver
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
</UL>

<P><STRONG><a name="[105]"></a>SendDebugPkt</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, comm_proto.o(i.SendDebugPkt))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SendDebugPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Send
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendTestPktAck
</UL>

<P><STRONG><a name="[176]"></a>SendEventNotice_BTRF2_4G</STRONG> (Thumb, 98 bytes, Stack size 152 bytes, 24g_proto.o(i.SendEventNotice_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = SendEventNotice_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeartBat_BTRF2_4G
</UL>

<P><STRONG><a name="[146]"></a>SendHeartBat_BTRF2_4G</STRONG> (Thumb, 466 bytes, Stack size 32 bytes, 24g_proto.o(i.SendHeartBat_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = SendHeartBat_BTRF2_4G &rArr; X6ToR6HeartBatACK_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCpuTemp
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempNotice
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;X6ToR6HeartBatACK_BTRF2_4G
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendEventNotice_BTRF2_4G
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
</UL>

<P><STRONG><a name="[145]"></a>SendOrderReport</STRONG> (Thumb, 438 bytes, Stack size 64 bytes, main_handle.o(i.SendOrderReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = SendOrderReport &rArr; SendOrderReportNotice_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReportNotice_BTRF2_4G
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempTake
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempGive
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SetPos_r
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteGunInfo_1_Data
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOrderData
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
</UL>

<P><STRONG><a name="[17a]"></a>SendOrderReportNotice_BTRF2_4G</STRONG> (Thumb, 60 bytes, Stack size 136 bytes, 24g_proto.o(i.SendOrderReportNotice_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = SendOrderReportNotice_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
</UL>

<P><STRONG><a name="[cb]"></a>SendProtoPkt_BTRF2_4G</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, 24g_proto.o(i.SendProtoPkt_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackSend24GData
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReportNotice_BTRF2_4G
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;X6ToR6HeartBatACK_BTRF2_4G
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopChargingAckBTRF2_4G
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingAckProc_24G
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargingNoticeBTRF_24G
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendReqCostTemplate_BTRF2_4G
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendEventNotice_BTRF2_4G
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardAuthReq_24G
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlAck_BTRF2_4G
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6X6BindACK_BTRF2_4G
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeREQ_BTRF2_4G
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeAckProc_BTRF2_4G
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadAckBTRF2_4G
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostTemplateAckBTRF2_4G
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthAckResult_BTRF2_4G
</UL>

<P><STRONG><a name="[144]"></a>SendReqCostTemplate_BTRF2_4G</STRONG> (Thumb, 62 bytes, Stack size 128 bytes, 24g_proto.o(i.SendReqCostTemplate_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = SendReqCostTemplate_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
</UL>

<P><STRONG><a name="[17b]"></a>SendStartChargingNotice</STRONG> (Thumb, 308 bytes, Stack size 24 bytes, 24g_proto.o(i.SendStartChargingNotice))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = SendStartChargingNotice &rArr; SendStartChargingNoticeBTRF_24G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargingNoticeBTRF_24G
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
</UL>

<P><STRONG><a name="[17c]"></a>SendStartChargingNoticeBTRF_24G</STRONG> (Thumb, 120 bytes, Stack size 160 bytes, 24g_proto.o(i.SendStartChargingNoticeBTRF_24G))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = SendStartChargingNoticeBTRF_24G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargingNotice
</UL>

<P><STRONG><a name="[17d]"></a>SendTestPktAck</STRONG> (Thumb, 48 bytes, Stack size 152 bytes, comm_proto.o(i.SendTestPktAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = SendTestPktAck &rArr; SendDebugPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDebugPkt
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReadCardHandle
</UL>

<P><STRONG><a name="[b4]"></a>SetBlueName</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, ckb24_um.o(i.SetBlueName))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = SetBlueName &rArr; BlueSendCmd &rArr; BlueCheckRes &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendCmd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetName
</UL>

<P><STRONG><a name="[9d]"></a>SetBluePair</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, ckb24_um.o(i.SetBluePair))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = SetBluePair &rArr; BlueSendCmd &rArr; BlueCheckRes &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendCmd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReqBreak
</UL>

<P><STRONG><a name="[b3]"></a>SetGateWay24GMacAddr</STRONG> (Thumb, 88 bytes, Stack size 48 bytes, ckb24_um.o(i.SetGateWay24GMacAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = SetGateWay24GMacAddr &rArr; BlueSendCmd &rArr; BlueCheckRes &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendCmd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetGWMac
</UL>

<P><STRONG><a name="[162]"></a>SetReadCardFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main_handle.o(i.SetReadCardFlag))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCardHandle
</UL>

<P><STRONG><a name="[e8]"></a>SetReadCardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main_handle.o(i.SetReadCardTime))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCardTimeLenth
</UL>

<P><STRONG><a name="[a5]"></a>SetRtcCount</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, rtc.o(i.SetRtcCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SetRtcCount &rArr; LinuxTickToDay &rArr; localtime &rArr; _localtime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_RTC_Write
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinuxTickToDay
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShakeReqProc
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeatACK
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6X6BindREQ_BTRF2_4G
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
</UL>

<P><STRONG><a name="[fb]"></a>Set_BitMask</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, fm175xx.o(i.Set_BitMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Halt
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_FIFO
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Select
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Request
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Rf
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_ConfigISOType
</UL>

<P><STRONG><a name="[11f]"></a>Set_Rf</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, fm175xx.o(i.Set_Rf))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Set_Rf &rArr; Clear_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_mSec
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Init
</UL>

<P><STRONG><a name="[93]"></a>ShakeReqProc</STRONG> (Thumb, 264 bytes, Stack size 40 bytes, blue.o(i.ShakeReqProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = ShakeReqProc &rArr; BlueSendHeartBeat &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeat
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtcCount
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPktSum
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
</UL>

<P><STRONG><a name="[e1]"></a>ShowGunInfo</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, charger.o(i.ShowGunInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ShowGunInfo &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charger_Init
</UL>

<P><STRONG><a name="[17f]"></a>SimUartSendByte</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, simuart.o(i.SimUartSendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SimUartSendByte &rArr; IO_USART_TX_PutVal
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_USART_TX_PutVal
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_1_IRQHandler
</UL>

<P><STRONG><a name="[180]"></a>SimuUartSendData</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, simuart.o(i.SimuUartSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SimuUartSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_mSec
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[183]"></a>SimuartGpioInit</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, simuart.o(i.SimuartGpioInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SimuartGpioInit &rArr; HT_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimuartInit
</UL>

<P><STRONG><a name="[6a]"></a>SimuartInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, simuart.o(i.SimuartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SimuartInit &rArr; SimuartGpioInit &rArr; HT_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimuartGpioInit
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[d2]"></a>SpeechCardBalance</STRONG> (Thumb, 608 bytes, Stack size 16 bytes, sc8042b.o(i.SpeechCardBalance))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SpeechCardBalance &rArr; CardBalanceSpeech &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardBalanceSpeech
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
</UL>

<P><STRONG><a name="[aa]"></a>SpeechChargeing</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, sc8042b.o(i.SpeechChargeing))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SpeechChargeing &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStartCharging
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isStartChargingBTRF2_4G
</UL>

<P><STRONG><a name="[d3]"></a>SpeechSelectGun</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, 24g_proto.o(i.SpeechSelectGun))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SpeechSelectGun &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
</UL>

<P><STRONG><a name="[db]"></a>StartChargingAckProc_24G</STRONG> (Thumb, 178 bytes, Stack size 152 bytes, 24g_proto.o(i.StartChargingAckProc_24G))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = StartChargingAckProc_24G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingProc_BTRF2_4G
</UL>

<P><STRONG><a name="[185]"></a>StartChargingNoticeACK_BTRF2_4G</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, 24g_proto.o(i.StartChargingNoticeACK_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = StartChargingNoticeACK_BTRF2_4G &rArr; GetRtcCount &rArr; GetTimeStamp &rArr; mktime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanStartChargingNotice_BTRF2_4G
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
</UL>

<P><STRONG><a name="[187]"></a>StartChargingProc_BTRF2_4G</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, 24g_proto.o(i.StartChargingProc_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = StartChargingProc_BTRF2_4G &rArr; StartChargingAckProc_24G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSystemInfoData
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OptFailNotice
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistoryOrderNum
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckStartPara
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingAckProc_24G
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
</UL>

<P><STRONG><a name="[188]"></a>StopChargingAckBTRF2_4G</STRONG> (Thumb, 64 bytes, Stack size 136 bytes, 24g_proto.o(i.StopChargingAckBTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = StopChargingAckBTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopChargingProc_BTRF2_4G
</UL>

<P><STRONG><a name="[189]"></a>StopChargingProc_BTRF2_4G</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, 24g_proto.o(i.StopChargingProc_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = StopChargingProc_BTRF2_4G &rArr; StopChargingAckBTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Proto2_4gStopCharging
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopChargingAckBTRF2_4G
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveStopChargingNotice_BTRF2_4G
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
</UL>

<P><STRONG><a name="[83]"></a>StringToBCD</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, main_handle.o(i.StringToBCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = StringToBCD
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc2Int
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardAuthReq_24G
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
</UL>

<P><STRONG><a name="[117]"></a>SwitchTo_Flrc</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, cmu.o(i.SwitchTo_Flrc))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_StandBy
</UL>

<P><STRONG><a name="[14d]"></a>SysCfgInit</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, main_handle.o(i.SysCfgInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SysCfgInit &rArr; PrintfData &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSysCfgInfo
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, port.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTick_Handler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vClearInterruptMaskFromISR
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMaskFromISR
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[14a]"></a>SystemClock_Config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, cmu.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemClock_Config &rArr; HT_CMU_Init &rArr; Wait2mS
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_mSec
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_CMU_SysClkGet
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_CMU_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_TaskSystem
</UL>

<P><STRONG><a name="[26]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_ht6xxx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(.text)
</UL>
<P><STRONG><a name="[18e]"></a>System_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, main_handle.o(i.System_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = System_Init &rArr; LoadSysCfgInfo &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUpgradeInit
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadElec
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charger_Init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSysCfgInfo
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
</UL>

<P><STRONG><a name="[19]"></a>TBS_IRQHandler</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, ht6xxx_it.o(i.TBS_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TBS_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TBS_ITFlagStatusGet
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TBS_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER_0_IRQHandler</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, ht6xxx_it.o(i.TIMER_0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TIMER_0_IRQHandler &rArr; CalcuElec &rArr; __aeabi_uldivmod &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcuElec
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ITFlagStatusGet
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ClearITPendingBit
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMU_Proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIMER_1_IRQHandler</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, simuart.o(i.TIMER_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIMER_1_IRQHandler &rArr; SimUartSendByte &rArr; IO_USART_TX_PutVal
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimUartSendByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIMER_2_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, ht6xxx_it.o(i.TIMER_2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER_2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ITFlagStatusGet
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIMER_3_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, ht6xxx_it.o(i.TIMER_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER_3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ITFlagStatusGet
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[182]"></a>TIM_Cmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, simuart.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimuUartSendData
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_1_IRQHandler
</UL>

<P><STRONG><a name="[177]"></a>TempNotice</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, sc8042b.o(i.TempNotice))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TempNotice &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeartBat_BTRF2_4G
</UL>

<P><STRONG><a name="[ba]"></a>TestReadCardHandle</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main_handle.o(i.TestReadCardHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = TestReadCardHandle &rArr; Check_M1_Card &rArr; TypeA_CardActivate &rArr; TypeA_Anticollision &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendTestPktAck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_UMTask
</UL>

<P><STRONG><a name="[70]"></a>Timer0_Init</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, timer.o(i.Timer0_Init))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[13d]"></a>TurnOffAllGun</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gun.o(i.TurnOffAllGun))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TurnOffAllGun
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsSet
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_BitsReset
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunGpioInit
</UL>

<P><STRONG><a name="[193]"></a>TypeA_Anticollision</STRONG> (Thumb, 418 bytes, Stack size 88 bytes, m1_card.o(i.TypeA_Anticollision))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = TypeA_Anticollision &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Set_NVB
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Set_Bit_Framing
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_CardActivate
</UL>

<P><STRONG><a name="[ef]"></a>TypeA_CardActivate</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, m1_card.o(i.TypeA_CardActivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = TypeA_CardActivate &rArr; TypeA_Anticollision &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Select
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Request
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
</UL>

<P><STRONG><a name="[f5]"></a>TypeA_Halt</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, m1_card.o(i.TypeA_Halt))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = TypeA_Halt &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
</UL>

<P><STRONG><a name="[196]"></a>TypeA_Request</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, m1_card.o(i.TypeA_Request))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TypeA_Request &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_CardActivate
</UL>

<P><STRONG><a name="[197]"></a>TypeA_Select</STRONG> (Thumb, 102 bytes, Stack size 56 bytes, m1_card.o(i.TypeA_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = TypeA_Select &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_CardActivate
</UL>

<P><STRONG><a name="[195]"></a>TypeA_Set_Bit_Framing</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, m1_card.o(i.TypeA_Set_Bit_Framing))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
</UL>

<P><STRONG><a name="[194]"></a>TypeA_Set_NVB</STRONG> (Thumb, 164 bytes, Stack size 12 bytes, m1_card.o(i.TypeA_Set_NVB))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TypeA_Set_NVB &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
</UL>

<P><STRONG><a name="[f]"></a>UART0_IRQHandler</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, ht6xxx_it.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART0_IRQHandler &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Put
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ReceiveData
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITFlagStatusGet
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UART1_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ht6xxx_it.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITFlagStatusGet
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UART2_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ht6xxx_it.o(i.UART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITFlagStatusGet
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART3_IRQHandler</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, ht6xxx_it.o(i.UART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART3_IRQHandler &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Put
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ReceiveData
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITFlagStatusGet
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ClearITPendingBit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_ISO7816_ITFlagStatusGet
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_ISO7816_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[fc]"></a>UART3_Init</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, uart.o(i.UART3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = UART3_Init &rArr; osMutexCreate &rArr; xQueueCreateMutex &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Init
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexCreate
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_Init
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITConfig
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_AFInit
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_CMU_ClkCtrl1Config
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComTask
</UL>

<P><STRONG><a name="[13]"></a>UART4_IRQHandler</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, ht6xxx_it.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART4_IRQHandler &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Put
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ReceiveData
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITFlagStatusGet
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ClearITPendingBit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_ISO7816_ITFlagStatusGet
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_ISO7816_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[c1]"></a>UART4_Init</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, uart.o(i.UART4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = UART4_Init &rArr; osMutexCreate &rArr; xQueueCreateMutex &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Init
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexCreate
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_Init
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITConfig
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_GPIO_AFInit
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_CMU_ClkCtrl1Config
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKB24_UM_Init
</UL>

<P><STRONG><a name="[14]"></a>UART5_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ht6xxx_it.o(i.UART5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITFlagStatusGet
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>Uart_Send</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, uart.o(i.Uart_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDebugPkt
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendCmd
</UL>

<P><STRONG><a name="[bc]"></a>UnpackRecv24GPack</STRONG> (Thumb, 448 bytes, Stack size 288 bytes, ckb24_um_handle.o(i.UnpackRecv24GPack))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = UnpackRecv24GPack &rArr; _24gRecvProc &rArr; HeartBatACK_BTRF2_4G &rArr; SendOrderReport &rArr; SendOrderReportNotice_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Get
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_UMTask
</UL>

<P><STRONG><a name="[1a8]"></a>UpgradeFlashErasePage</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, upgrade.o(i.UpgradeFlashErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = UpgradeFlashErasePage &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempTake
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempGive
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SetPos_w
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SetPos_r
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ErasePage
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Init
</UL>

<P><STRONG><a name="[1a9]"></a>UpgradeStart</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, upgrade.o(i.UpgradeStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UpgradeStart &rArr; PlayVoice
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Init
</UL>

<P><STRONG><a name="[1aa]"></a>Upgrade_FlashCheck</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, upgrade.o(i.Upgrade_FlashCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Upgrade_FlashCheck &rArr; Flash_Read &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SetPos_r
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Write
</UL>

<P><STRONG><a name="[90]"></a>Upgrade_Init</STRONG> (Thumb, 524 bytes, Stack size 64 bytes, upgrade.o(i.Upgrade_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Upgrade_Init &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SetPos_w
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_EraseALL
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUARTUpgradeFlag
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueToothUpgradeFlag
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeStart
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeFlashErasePage
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_UpgradeNotiProc_BTRF2_4G
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWUpgradeNotice
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeNotiProc_BTRF2_4G
</UL>

<P><STRONG><a name="[c7]"></a>Upgrade_Write</STRONG> (Thumb, 304 bytes, Stack size 40 bytes, upgrade.o(i.Upgrade_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Upgrade_Write &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SetPos_w
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_FlashCheck
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Upgrade_Write
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
</UL>

<P><STRONG><a name="[158]"></a>Write_ECADR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, emu.o(i.Write_ECADR))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOff_MCU
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emu_var_cal
</UL>

<P><STRONG><a name="[155]"></a>Write_FIFO</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, fm175xx.o(i.Write_FIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Write_FIFO &rArr; Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
</UL>

<P><STRONG><a name="[f9]"></a>Write_Reg</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fm175xx.o(i.Write_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Write_Reg &rArr; SPIWrite &rArr; SIM_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Halt
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Select
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Request
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_FIFO
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_ConfigISOType
</UL>

<P><STRONG><a name="[143]"></a>X6ToR6HeartBatACK_BTRF2_4G</STRONG> (Thumb, 382 bytes, Stack size 160 bytes, 24g_proto.o(i.X6ToR6HeartBatACK_BTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = X6ToR6HeartBatACK_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunStatus
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendProtoPkt_BTRF2_4G
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeartBat_BTRF2_4G
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
</UL>

<P><STRONG><a name="[1a7]"></a>_24gRecvProc</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, 24g_proto.o(i._24gRecvProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = _24gRecvProc &rArr; HeartBatACK_BTRF2_4G &rArr; SendOrderReport &rArr; SendOrderReportNotice_BTRF2_4G &rArr; SendProtoPkt_BTRF2_4G &rArr; SendBlueTooth2_4GPkt &rArr; Uart_Send &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseCheckTimeOver
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopChargingProc_BTRF2_4G
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingProc_BTRF2_4G
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingNoticeACK_BTRF2_4G
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlProc_BTRF2_4G
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6X6BindREQ_BTRF2_4G
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6ToX6StopChargingAckBTRF2_4G
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6ToX6ScanCodeStartChargerAck
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeNotiProc_BTRF2_4G
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeAck_BTRF2_4G
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostTemplateProc_BTRF2_4G
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearUpgradeWaitTimer
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthAck_BTRF2_4G
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpackRecv24GPack
</UL>

<P><STRONG><a name="[1ab]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[203]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[6c]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvBtData
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleReconnect
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeat
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpackRecv24GPack
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlueTooth2_4GPkt
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIdlePin
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKBRecvProc
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargingNotice
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGunStatus
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashInfoData
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Blockread
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunGpioInit
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FuseholderStatusProc
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ErasePage
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComTask
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingProc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_UMTask
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isTheSameCard
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCfgInit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sc8042bSpeechStartChargerFail
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOrderReport
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowGunInfo
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunChargingProc
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingTime
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckGunStatu
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_UpgradeNotiProc_BTRF2_4G
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Upgrade_Write
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShakeReqProc
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddrAck
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddr
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStopCharging
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueStartCharging
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendStartChargingAck
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendHeartBeatACK
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReqCostTemlteProc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWUpgradeNotice
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWDownLoad
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCostTemlteAck
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Write
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_Init
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempNotice
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OptFailNotice
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOn
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOff
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistoryOrderNum
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckStartPara
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTRF2_4gStartCharging
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isStartChargingBTRF2_4G
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingProc_BTRF2_4G
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargingNoticeBTRF_24G
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlProc_BTRF2_4G
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6ToX6StopChargingAckBTRF2_4G
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R6ToX6ScanCodeStartChargerAck
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBatACK_BTRF2_4G
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeREQ_BTRF2_4G
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeNotiProc_BTRF2_4G
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWUpgradeAck_BTRF2_4G
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadAckBTRF2_4G
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostTemplateProc_BTRF2_4G
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthAck_BTRF2_4G
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetName
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetGWMac
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetDevt
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleModeGetName
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleModeDevt
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleCheckReset
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_FlashCheck
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeFlashErasePage
</UL>

<P><STRONG><a name="[204]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[205]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[1ad]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[206]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[f4]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBluePair
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGateWay24GMacAddr
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBlueName
</UL>

<P><STRONG><a name="[207]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[208]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[5e]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[92]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ckb24_um_handle.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24gRecvProc
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpackRecv24GPack
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKBRecvProc
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComTask
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Set_NVB
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePktProc
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeechSelectGun
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthResult_BTRF2_4G
</UL>

<P><STRONG><a name="[209]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[20a]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[20b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[10c]"></a>emu_var_cal</STRONG> (Thumb, 750 bytes, Stack size 4 bytes, emu.o(i.emu_var_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = emu_var_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_ECADR
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMU_Init
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMU_Proc
</UL>

<P><STRONG><a name="[119]"></a>enter_hold_init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, pmu.o(i.enter_hold_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = enter_hold_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_PMU_ITConfig
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_StandBy
</UL>

<P><STRONG><a name="[2c]"></a>fputc</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, main_handle.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fputc &rArr; SimuUartSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimuUartSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[10b]"></a>get_emu_var_default</STRONG> (Thumb, 858 bytes, Stack size 4 bytes, emu.o(i.get_emu_var_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = get_emu_var_default
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ECADR
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMU_Init
</UL>

<P><STRONG><a name="[82]"></a>isArraryEmpty</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, main_handle.o(i.isArraryEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isArraryEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetName
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetGWMac
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
</UL>

<P><STRONG><a name="[dc]"></a>isStartChargingBTRF2_4G</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, 24g_proto.o(i.isStartChargingBTRF2_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = isStartChargingBTRF2_4G &rArr; BTRF2_4gStartCharging &rArr; FlashWriteGunInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSystemInfoData
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeechChargeing
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTRF2_4gStartCharging
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
</UL>

<P><STRONG><a name="[d8]"></a>isTheSameCard</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, main_handle.o(i.isTheSameCard))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = isTheSameCard &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
</UL>

<P><STRONG><a name="[25]"></a>main</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = main &rArr; vTaskStartScheduler &rArr; xTaskGenericCreate &rArr; prvAllocateTCBAndStack &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_TaskSystem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[7c]"></a>osDelay</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, cmsis_os.o(i.osDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleReconnect
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashInfoData
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComTask
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingCtrlProc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_UMTask
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sc8042bSpeechStartChargerFail
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOrderReport
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBluePair
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReqBreak
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueFWDownLoad
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempNotice
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeechChargeing
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeechCardBalance
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OptFailNotice
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGateWay24GMacAddr
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBlueName
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKB24_UM_HardReset
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleSetDevt
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuleCheckReset
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendCmd
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueCheckRes
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardBalanceSpeech
</UL>

<P><STRONG><a name="[132]"></a>osMutexCreate</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cmsis_os.o(i.osMutexCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = osMutexCreate &rArr; xQueueCreateMutex &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Init
</UL>

<P><STRONG><a name="[130]"></a>osMutexRelease</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, cmsis_os.o(i.osMutexRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osMutexRelease &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inHandlerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Send
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SetPos_w
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SetPos_r
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ErasePage
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_EraseALL
</UL>

<P><STRONG><a name="[12e]"></a>osMutexWait</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, cmsis_os.o(i.osMutexWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inHandlerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Send
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SetPos_w
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SetPos_r
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ErasePage
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_EraseALL
</UL>

<P><STRONG><a name="[b6]"></a>osSemaphoreCreate</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, cmsis_os.o(i.osSemaphoreCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osSemaphoreCreate &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_System_Init
</UL>

<P><STRONG><a name="[1be]"></a>pvPortMalloc</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, heap_4.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAllocateTCBAndStack
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
</UL>

<P><STRONG><a name="[1df]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, tasks.o(i.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[1e2]"></a>pxPortInitialiseStack</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[1c4]"></a>uxListRemove</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[1ce]"></a>vListInitialise</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
</UL>

<P><STRONG><a name="[1cc]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTCBVariables
</UL>

<P><STRONG><a name="[1bc]"></a>vListInsert</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[1d8]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[2e]"></a>vMainTask</STRONG> (Thumb, 612 bytes, Stack size 40 bytes, main_handle.o(i.vMainTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = vMainTask &rArr; System_Init &rArr; LoadSysCfgInfo &rArr; FlashWriteSystemInfoData &rArr; FlashWriteData &rArr; Flash_Write &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargingNotice
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcCount
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunStatus
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FuseholderStatusProc
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Init
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_StandBy
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[1c3]"></a>vPortEnterCritical</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[1c5]"></a>vPortExitCritical</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[1bf]"></a>vPortFree</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, heap_4.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAllocateTCBAndStack
</UL>

<P><STRONG><a name="[1ca]"></a>vPortYield</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, port.o(i.vPortYield))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[ae]"></a>vTaskDelay</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, tasks.o(i.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIdlePin
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKBRecvProc
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargingNotice
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MuxSempTake
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestReadCardHandle
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueToothSet2_4gAddr
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingAckProc_24G
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeechSelectGun
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardAuthReq_24G
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlProc_BTRF2_4G
</UL>

<P><STRONG><a name="[1d3]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(i.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[1d7]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[1d9]"></a>vTaskPriorityInherit</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, tasks.o(i.vTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskPriorityInherit
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[1e0]"></a>vTaskSetTimeOutState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(i.vTaskSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[1b5]"></a>vTaskStartScheduler</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = vTaskStartScheduler &rArr; xTaskGenericCreate &rArr; prvAllocateTCBAndStack &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c1]"></a>vTaskSuspendAll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[40]"></a>vTaskSwitchContext</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[1da]"></a>xPortStartScheduler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvPortStartFirstTask
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSetupTimerInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[1ba]"></a>xQueueCreateCountingSemaphore</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, queue.o(i.xQueueCreateCountingSemaphore))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
</UL>

<P><STRONG><a name="[1b6]"></a>xQueueCreateMutex</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, queue.o(i.xQueueCreateMutex))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueCreateMutex &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexCreate
</UL>

<P><STRONG><a name="[1a4]"></a>xQueueGenericCreate</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, queue.o(i.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Init
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>

<P><STRONG><a name="[1a6]"></a>xQueueGenericReceive</STRONG> (Thumb, 352 bytes, Stack size 48 bytes, queue.o(i.xQueueGenericReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>

<P><STRONG><a name="[1dd]"></a>xQueueGenericReset</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[1b8]"></a>xQueueGenericSend</STRONG> (Thumb, 320 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
</UL>

<P><STRONG><a name="[19a]"></a>xQueueGiveFromISR</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, queue.o(i.xQueueGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vClearInterruptMaskFromISR
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMaskFromISR
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
</UL>

<P><STRONG><a name="[1b9]"></a>xQueueReceiveFromISR</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, queue.o(i.xQueueReceiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xQueueReceiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vClearInterruptMaskFromISR
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMaskFromISR
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
</UL>

<P><STRONG><a name="[1e1]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, tasks.o(i.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[1b4]"></a>xTaskGenericCreate</STRONG> (Thumb, 278 bytes, Stack size 48 bytes, tasks.o(i.xTaskGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = xTaskGenericCreate &rArr; prvAllocateTCBAndStack &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTCBVariables
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAllocateTCBAndStack
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1de]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetSchedulerState))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[b9]"></a>xTaskGetTickCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpgradeWaitTimer
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAuthTask
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CK24_UMTask
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sc8042bSpeechStartChargerFail
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCheckTimeOver
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GreenLedToggle
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCardTimeLenth
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMainTask
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearUpgradeWaitTimer
</UL>

<P><STRONG><a name="[18c]"></a>xTaskIncrementTick</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[1c9]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[1d2]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, tasks.o(i.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[1c2]"></a>xTaskResumeAll</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[178]"></a>NVIC_SystemReset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main_handle.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOrderReport
</UL>

<P><STRONG><a name="[125]"></a>NVIC_SystemReset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, 24g_proto.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlProc_BTRF2_4G
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWDownLoadProc_BTRF2_4G
</UL>

<P><STRONG><a name="[16c]"></a>RemoteCtrlBtRf2_4g</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, 24g_proto.o(i.RemoteCtrlBtRf2_4g))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = RemoteCtrlBtRf2_4g &rArr; GunTurnOn &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOn
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GunTurnOff
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCtrlProc_BTRF2_4G
</UL>

<P><STRONG><a name="[106]"></a>NVIC_SystemReset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, comm_proto.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
</UL>

<P><STRONG><a name="[11a]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pmu.o(i.NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_StandBy
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_hold_init
</UL>

<P><STRONG><a name="[116]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pmu.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_Init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_StandBy
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_hold_init
</UL>

<P><STRONG><a name="[1b2]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, pmu.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_hold_init
</UL>

<P><STRONG><a name="[1a1]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(i.NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Init
</UL>

<P><STRONG><a name="[1a3]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Init
</UL>

<P><STRONG><a name="[1a2]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, uart.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Init
</UL>

<P><STRONG><a name="[1a5]"></a>USART_SendData</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, uart.o(i.USART_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USART_SendData &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Send
</UL>

<P><STRONG><a name="[184]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, simuart.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimuartInit
</UL>

<P><STRONG><a name="[13f]"></a>Wait2mS</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ht6xxx_cmu.o(i.Wait2mS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Wait2mS
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_CMU_SysClkGet
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_CMU_Init
</UL>

<P><STRONG><a name="[1c7]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, queue.o(i.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
</UL>

<P><STRONG><a name="[1c8]"></a>prvCopyDataToQueue</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, queue.o(i.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[1cf]"></a>prvIsQueueEmpty</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[1d0]"></a>prvIsQueueFull</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueFull
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[1d1]"></a>prvUnlockQueue</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, queue.o(i.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[1bb]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[1bd]"></a>prvAllocateTCBAndStack</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, tasks.o(i.prvAllocateTCBAndStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = prvAllocateTCBAndStack &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[1c0]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, tasks.o(i.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[1c6]"></a>prvDeleteTCB</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tasks.o(i.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[33]"></a>prvIdleTask</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[1cb]"></a>prvInitialiseTCBVariables</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, tasks.o(i.prvInitialiseTCBVariables))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvInitialiseTCBVariables
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[1cd]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, tasks.o(i.prvInitialiseTaskLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[1e3]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[1d4]"></a>prvHeapInit</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, heap_4.o(i.prvHeapInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[1d5]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, heap_4.o(i.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[1db]"></a>prvSetupTimerInterrupt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, port.o(i.prvSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[2f]"></a>prvTaskExitError</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[1b7]"></a>inHandlerMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cmsis_os.o(i.inHandlerMode))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
</UL>

<P><STRONG><a name="[1d]"></a>Reserved_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht502x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht502x.o(RESET)
</UL>
<P><STRONG><a name="[1ae]"></a>_fp_digits</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1ac]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[1b1]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1b0]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2d]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL>
<P><STRONG><a name="[2a]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[64]"></a>_scanf_longlong</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[63]"></a>_scanf_real</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<HR></body></html>
